05-18  15:05:51.183  INFO  -||- [com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor] [main] => LOCAL_SNAPSHOT_PATH:C:\Users\2797\nacos\config
05-18  15:05:51.206  INFO  -||- [com.alibaba.nacos.client.config.impl.Limiter] [main] => limitTime:5.0
05-18  15:05:51.221  WARN  -||- [com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder] [main] => Ignore the empty nacos configuration and get it based on dataId[cc] & group[TEST_GROUP]
05-18  15:05:51.223  WARN  -||- [com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder] [main] => Ignore the empty nacos configuration and get it based on dataId[cc.yaml] & group[TEST_GROUP]
05-18  15:05:51.225  INFO  -||- [com.alibaba.nacos.client.config.utils.JVMUtil] [main] => isMultiInstance:false
05-18  15:05:51.233  INFO  -||- [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration] [main] => Located property source: [BootstrapPropertySource {name='bootstrapProperties-cc-test.yaml,TEST_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-cc.yaml,TEST_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-cc,TEST_GROUP'}]
05-18  15:05:51.282  INFO  -||- [com.chenfan.finance.FinanceApplication] [main] => The following profiles are active: test
05-18  15:05:52.387  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
05-18  15:05:52.390  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
05-18  15:05:52.641  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  15:05:52.642  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data JPA repositories in DEFAULT mode.
05-18  15:05:52.681  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 33ms. Found 0 JPA repository interfaces.
05-18  15:05:52.686  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  15:05:52.687  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
05-18  15:05:52.704  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 17ms. Found 0 MongoDB repository interfaces.
05-18  15:05:52.714  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  15:05:52.715  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data Redis repositories in DEFAULT mode.
05-18  15:05:52.739  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
05-18  15:05:52.797  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
05-18  15:05:52.923  INFO  -||- [org.springframework.context.annotation.ConfigurationClassPostProcessor] [main] => Cannot enhance @Configuration bean definition 'com.chenfan.ccp.autoconfigure.GlobalMqMessageConfigure' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
05-18  15:05:53.007  INFO  -||- [org.springframework.cloud.context.scope.GenericScope] [main] => BeanFactory id=a99f0510-61d8-31da-b49e-dee2168a9b76
05-18  15:05:53.060  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.BaseInfoRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.061  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.BaseRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.062  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.McnRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.063  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.PrivilegeUserServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.064  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.PurchaseRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.064  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.TaskRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.066  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.VendorCenterServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.067  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.process.client.ProcessClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.068  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.code.generate.CodeGenerateClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  15:05:53.620  INFO  -||- [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] => Tomcat initialized with port(s): 8092 (http)
05-18  15:05:53.628  INFO  -||- [org.apache.catalina.core.StandardService] [main] => Starting service [Tomcat]
05-18  15:05:53.628  INFO  -||- [org.apache.catalina.core.StandardEngine] [main] => Starting Servlet engine: [Apache Tomcat/9.0.37]
05-18  15:05:53.743  INFO  -||- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [main] => Initializing Spring embedded WebApplicationContext
05-18  15:05:53.743  INFO  -||- [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] => Root WebApplicationContext: initialization completed in 2438 ms
05-18  15:05:54.063  INFO  -||- [org.redisson.Version] [main] => Redisson 3.14.0
05-18  15:05:54.405  INFO  -||- [org.redisson.connection.pool.MasterPubSubConnectionPool] [redisson-netty-2-23] => 1 connections initialized for /10.228.81.233:6379
05-18  15:05:54.420  INFO  -||- [org.redisson.connection.pool.MasterConnectionPool] [redisson-netty-2-19] => 24 connections initialized for /10.228.81.233:6379
05-18  15:05:54.878  INFO  -||- [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure] [main] => Init DruidDataSource
05-18  15:05:54.979  WARN  -||- [com.alibaba.druid.pool.DruidDataSource] [main] => removeAbandoned is true, not use in production.
05-18  15:05:55.099  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [main] => {dataSource-1} inited
05-18  15:05:55.245  INFO  -||- [org.hibernate.jpa.internal.util.LogHelper] [main] => HHH000204: Processing PersistenceUnitInfo [name: default]
05-18  15:05:55.290  INFO  -||- [org.hibernate.Version] [main] => HHH000412: Hibernate ORM core version 5.4.18.Final
05-18  15:05:55.398  INFO  -||- [org.hibernate.annotations.common.Version] [main] => HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
05-18  15:05:55.510  INFO  -||- [org.hibernate.dialect.Dialect] [main] => HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
05-18  15:05:55.686  INFO  -||- [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] => HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
05-18  15:05:55.696  INFO  -||- [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] => Initialized JPA EntityManagerFactory for persistence unit 'default'
05-18  15:05:56.144  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.CfBankAndCashMapper.delete] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Delete]
05-18  15:05:56.710  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingDetailMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
05-18  15:05:56.714  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingDetailMapper.updateById] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.UpdateById]
05-18  15:05:56.728  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingHeaderMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
05-18  15:05:56.733  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingHeaderMapper.selectById] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.SelectById]
05-18  15:05:56.964  WARN  -||- [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] => spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
05-18  15:05:58.994  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Property :null
05-18  15:05:58.995  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Environment :null
05-18  15:05:58.996  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Property :null
05-18  15:05:59.100  INFO  -||- [org.mongodb.driver.cluster] [main] => Cluster created with settings {hosts=[10.228.86.202:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
05-18  15:05:59.518  INFO  -||- [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] => Exposing 1 endpoint(s) beneath base path '/actuator'
05-18  15:05:59.703  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [main] => Initializing ExecutorService 'sheduleClearMemory'
05-18  15:05:59.712  INFO  -||- [com.chenfan.finance.config.XxlJobConfig] [main] => >>>>>>>>>>> xxl-job config init.
05-18  15:05:59.764  WARN  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => No URLs will be polled as dynamic configuration sources.
05-18  15:05:59.764  INFO  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
05-18  15:05:59.768  WARN  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => No URLs will be polled as dynamic configuration sources.
05-18  15:05:59.768  INFO  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
05-18  15:06:00.146  INFO  -||- [org.mongodb.driver.cluster] [cluster-ClusterId{value='60a367577d988c728adbb0fc', description='null'}-10.228.86.202:27017] => Exception in monitor thread while connecting to server 10.228.86.202:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:128)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
05-18  15:06:00.783  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:monitoringTask, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@6c7d5f84[class com.chenfan.finance.job.FinanceJob#monitoringTask]
05-18  15:06:00.783  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:qcTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@1c9c7f1e[class com.chenfan.finance.job.FinanceJob#qcTaskJob]
05-18  15:06:00.783  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:cfRdCalculateTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@3b7777ea[class com.chenfan.finance.job.FinanceJob#cfRdCalculateTaskJob]
05-18  15:06:00.783  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:cfWdtRdCalculateTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@68e47ff9[class com.chenfan.finance.job.FinanceJob#cfWdtRdCalculateTaskJob]
05-18  15:06:00.878  INFO  -||- [com.xxl.job.core.util.NetUtil] [main] => >>>>>>>>>>> xxl-rpc, port[9999] is in use.
05-18  15:06:00.904  INFO  -||- [com.xxl.job.core.server.EmbedServer] [Thread-79] => >>>>>>>>>>> xxl-job remoting server start success, nettype = class com.xxl.job.core.server.EmbedServer, port = 10000
05-18  15:06:02.449  INFO  -||- [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] => Tomcat started on port(s): 8092 (http) with context path ''
05-18  15:06:02.452  INFO  -||- [com.alibaba.nacos.client.naming] [main] => [BEAT] adding beat: {"cluster":"DEFAULT","ip":"10.228.84.57","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8092,"scheduled":false,"serviceName":"CC_GROUP@@chenfan-cloud-finance","stopped":false,"weight":1.0} to beat map.
05-18  15:06:02.461  INFO  -||- [com.alibaba.nacos.client.naming] [main] => [REGISTER-SERVICE] test registering service CC_GROUP@@chenfan-cloud-finance with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8092,"weight":1.0}
05-18  15:06:02.468  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [main] => nacos registry, CC_GROUP chenfan-cloud-finance 10.228.84.57:8092 register finished
05-18  15:06:02.538  INFO  -||- [com.chenfan.finance.FinanceApplication] [main] => Started FinanceApplication in 12.392 seconds (JVM running for 13.789)
05-18  15:06:02.543  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] => ====================== init start =======================
05-18  15:06:02.559  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] =>  finance_project_key : 829ca10b-8bb0-4c1c-a76a-8f7136accb6a 
05-18  15:06:02.559  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] => ====================== init end =======================
05-18  15:06:02.563  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc-test.yaml+TEST_GROUP+test
05-18  15:06:02.565  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc-test.yaml, group=TEST_GROUP, cnt=1
05-18  15:06:02.565  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc.yaml+TEST_GROUP+test
05-18  15:06:02.565  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc.yaml, group=TEST_GROUP, cnt=1
05-18  15:06:02.565  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc+TEST_GROUP+test
05-18  15:06:02.565  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc, group=TEST_GROUP, cnt=1
05-18  15:06:02.568  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ======================================================================================
05-18  15:06:02.568  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] =>                                                                                       
05-18  15:06:02.568  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ................................服务启动成功,端口为8092................................
05-18  15:06:02.568  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ................................日志保存路径为: ./log/................................
05-18  15:06:02.568  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] =>                                                                                       
05-18  15:06:02.568  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ======================================================================================
05-18  15:06:02.570  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  15:06:02.771  INFO  -||- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [RMI TCP Connection(1)-10.228.84.57] => Initializing Spring DispatcherServlet 'dispatcherServlet'
05-18  15:06:02.771  INFO  -||- [org.springframework.web.servlet.DispatcherServlet] [RMI TCP Connection(1)-10.228.84.57] => Initializing Servlet 'dispatcherServlet'
05-18  15:06:02.786  INFO  -||- [org.springframework.web.servlet.DispatcherServlet] [RMI TCP Connection(1)-10.228.84.57] => Completed initialization in 14 ms
05-18  15:06:02.823  INFO  -||- [org.mongodb.driver.cluster] [RMI TCP Connection(2)-10.228.84.57] => Cluster description not yet available. Waiting for 30000 ms before timing out
05-18  15:06:30.614  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================\\                      
05-18  15:06:30.614  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          \\                     
05-18  15:06:30.615  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           \\                    
05-18  15:06:30.615  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestURI:        /charge/common/list
05-18  15:06:30.687  INFO  -|EBvUbagQUvMyNj73|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-1] => 获取的关联的brandIds:null,companyIds:null,userIds:null
05-18  15:06:30.794  DEBUG -|EBvUbagQUvMyNj73|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-1] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (check_status <> ?)
05-18  15:06:30.820  DEBUG -|EBvUbagQUvMyNj73|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-1] => ==> Parameters: 0(Integer)
05-18  15:06:30.832  DEBUG -|EBvUbagQUvMyNj73|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-1] => <==      Total: 1
05-18  15:06:30.832  INFO  -|EBvUbagQUvMyNj73|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-1] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (check_status <> 0) <==   |   [time]: ==> 17 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [444]  <==
05-18  15:06:30.834  DEBUG -|EBvUbagQUvMyNj73|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-1] => ==>  Preparing: SELECT charge_id,charge_code,charge_source_type,charge_type,check_status,arap_type,split_type,charge_source_code,charge_source_detail,currency_code,exchange_rate,tax_rate,charge_unit,charge_qty,price_pp,amount_pp,balance,finance_entity,charge_month_belong_to,tax_invoice_no,tax_invoice_date,invoice_no,invoice_title,invoice_title_name,invoice_date,clear_no,actual_amount,actual_date,actual_history_date,remark,charge_date,bill_source_type,invoice_entrance_date,sett_template,create_by,create_name,create_date,company_id,tenant_id,update_by,update_name,update_date,parent_id,split_id,brand_id FROM cf_charge_common WHERE (check_status <> ?) ORDER BY create_date DESC LIMIT ?
05-18  15:06:30.837  DEBUG -|EBvUbagQUvMyNj73|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-1] => ==> Parameters: 0(Integer), 15(Integer)
05-18  15:06:30.850  DEBUG -|EBvUbagQUvMyNj73|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-1] => <==      Total: 15
05-18  15:06:30.852  INFO  -|EBvUbagQUvMyNj73|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-1] =>     [sql]: ==> select * from cf_charge_common where (check_status <> 0) order by create_date desc limit 15  <==   |   [time]: ==> 16 ms <==   |   [size]: ==> 15 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  15:06:30.897  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestParams:     
05-18  15:06:30.898  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] => Total:             284ms
05-18  15:06:30.898  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           //                      
05-18  15:06:30.898  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          //                       
05-18  15:06:30.898  INFO  -|EBvUbagQUvMyNj73|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================//                        



05-18  15:06:32.270  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  15:06:32.824  WARN  -||- [org.springframework.boot.actuate.mongo.MongoHealthIndicator] [RMI TCP Connection(2)-10.228.84.57] => MongoDB health check failed
org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:90)
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:2902)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:560)
	at org.springframework.data.mongodb.core.MongoTemplate.executeCommand(MongoTemplate.java:476)
	at org.springframework.boot.actuate.mongo.MongoHealthIndicator.doHealthCheck(MongoHealthIndicator.java:46)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:38)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:108)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateHealth(HealthEndpointSupport.java:119)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:105)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:83)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:70)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:75)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:77)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:121)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:96)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.mongodb.internal.connection.BaseCluster.getDescription(BaseCluster.java:182)
	at com.mongodb.internal.connection.SingleServerCluster.getDescription(SingleServerCluster.java:41)
	at com.mongodb.client.internal.MongoClientDelegate.getConnectedClusterDescription(MongoClientDelegate.java:145)
	at com.mongodb.client.internal.MongoClientDelegate.createClientSession(MongoClientDelegate.java:100)
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.getClientSession(MongoClientDelegate.java:277)
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:181)
	at com.mongodb.client.internal.MongoDatabaseImpl.executeCommand(MongoDatabaseImpl.java:186)
	at com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:155)
	at com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:150)
	at org.springframework.data.mongodb.core.MongoTemplate.lambda$executeCommand$2(MongoTemplate.java:476)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:558)
	... 45 common frames omitted
05-18  15:06:33.251  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================\\                      
05-18  15:06:33.252  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          \\                     
05-18  15:06:33.252  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           \\                    
05-18  15:06:33.252  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestURI:        /invoice/list
05-18  15:06:33.267  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.finance.controller.CfInvoiceHeaderController] [http-nio-8092-exec-2] => 获取的关联的brandIds:null
05-18  15:06:33.295  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.invoiceHeaderList_COUNT] [http-nio-8092-exec-2] => ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT (cih.invoice_no) AS invoice_no, cih.invoice_status, cih.job_type, cih.invoice_type, cih.balance, cih.balance_name, cih.brand_id, cih.invoice_title, cih.invoice_title_name, cih.bank, cih.bank_accounts, cih.invoice_currency_code, cih.invoice_exchange_rate, cih.arap_date, cih.invoice_date, cih.invoice_by, cih.remark, cih.create_by, cih.update_by, cih.update_date, cih.update_name, cih.company_id, abs(cih.invoicel_debit - cih.invoicel_credit) - IFNULL(cih.advance_pay_money, 0) AS invoicelTotal, cih.clear_amount, (abs(cih.invoicel_debit - cih.invoicel_credit) - IFNULL(cih.clear_amount, 0)) AS overInvoicel, cih.clear_status, cih.create_name, cih.create_date, DATE_FORMAT(cih.create_date, '%Y-%m-%d %H:%i:%s') AS createDateString, cih.invoice_id, cih.invoicel_debit, cih.invoicel_credit, cih.date_start, cih.date_end, cih.advance_pay_money, b.rd_record_type, b.sales_type, CASE b.rd_record_type WHEN 0 THEN '成品' WHEN 1 THEN '辅料' ELSE '' END AS rd_record_type_name FROM cf_invoice_header cih LEFT JOIN cf_invoice_settlement cis ON cih.invoice_id = cis.invoice_id LEFT JOIN (SELECT cc.invoice_no, crr.rd_record_type, cc.sales_type FROM cf_charge cc, cf_rd_record crr WHERE cc.invoice_no IS NOT NULL AND cc.is_offset <> 1 AND cc.charge_source_code = crr.rd_record_code GROUP BY cc.invoice_no, crr.rd_record_type) b ON b.invoice_no = cih.invoice_no WHERE cih.invoice_status != 0 AND cih.job_type IN (?, ?)) table_count
05-18  15:06:33.304  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.invoiceHeaderList_COUNT] [http-nio-8092-exec-2] => ==> Parameters: 1(String), 2(String)
05-18  15:06:33.469  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.invoiceHeaderList_COUNT] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:33.470  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_charge cc, cf_rd_record crr where cc.invoice_no is not null and cc.is_offset <> 1 and cc.charge_source_code = crr.rd_record_code group by cc.invoice_no, crr.rd_record_type) b on b.invoice_no = cih.invoice_no where cih.invoice_status != 0 and cih.job_type in ('1', '2')) table_count <==   |   [time]: ==> 174 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [680]  <==
05-18  15:06:33.472  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.invoiceHeaderList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT DISTINCT ( cih.invoice_no ) AS invoice_no, cih.invoice_status, cih.job_type, cih.invoice_type, cih.balance, cih.balance_name, cih.brand_id, cih.invoice_title, cih.invoice_title_name, cih.bank, cih.bank_accounts, cih.invoice_currency_code, cih.invoice_exchange_rate, cih.arap_date, cih.invoice_date, cih.invoice_by, cih.remark, cih.create_by, cih.update_by, cih.update_date, cih.update_name, cih.company_id, abs( cih.invoicel_debit - cih.invoicel_credit ) - IFNULL( cih.advance_pay_money, 0 ) AS invoicelTotal, cih.clear_amount, ( abs( cih.invoicel_debit - cih.invoicel_credit ) - IFNULL( cih.clear_amount, 0 ) ) AS overInvoicel, cih.clear_status, cih.create_name, cih.create_date, DATE_FORMAT( cih.create_date, '%Y-%m-%d %H:%i:%s' ) AS createDateString, cih.invoice_id, cih.invoicel_debit, cih.invoicel_credit, cih.date_start, cih.date_end, cih.advance_pay_money, b.rd_record_type, b.sales_type, CASE b.rd_record_type WHEN 0 THEN '成品' WHEN 1 THEN '辅料' ELSE '' END AS rd_record_type_name FROM cf_invoice_header cih LEFT JOIN cf_invoice_settlement cis ON cih.invoice_id = cis.invoice_id LEFT JOIN ( SELECT cc.invoice_no, crr.rd_record_type, cc.sales_type FROM cf_charge cc, cf_rd_record crr WHERE cc.invoice_no IS NOT NULL AND cc.is_offset <> 1 AND cc.charge_source_code = crr.rd_record_code GROUP BY cc.invoice_no, crr.rd_record_type ) b ON b.invoice_no = cih.invoice_no WHERE cih.invoice_status != 0 AND cih.job_type in ( ? , ? ) ORDER BY cih.invoice_id DESC LIMIT ?
05-18  15:06:33.481  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.invoiceHeaderList] [http-nio-8092-exec-2] => ==> Parameters: 1(String), 2(String), 30(Integer)
05-18  15:06:33.654  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.invoiceHeaderList] [http-nio-8092-exec-2] => <==      Total: 30
05-18  15:06:33.655  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_charge cc, cf_rd_record crr where cc.invoice_no is not null and cc.is_offset <> 1 and cc.charge_source_code = crr.rd_record_code group by cc.invoice_no, crr.rd_record_type ) b on b.invoice_no = cih.invoice_no where cih.invoice_status != 0 and cih.job_type in ( '1' , '2' ) order by cih.invoice_id desc limit 30  <==   |   [time]: ==> 182 ms <==   |   [size]: ==> 30 <==   |   [result]: ==> [CfInvoiceHeaderList ...  <==
05-18  15:06:33.671  INFO  -|EBvUbagQUvMyNjch|- [RPC_LOG] [http-nio-8092-exec-2] => 开始请求服务=chenfan-cloud-vendor-center,URI=/vendor/getVendorNamesByCodes
05-18  15:06:33.672  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-2] => [VendorCenterServer#getVendorNamesByCodes] ---> POST http://chenfan-cloud-vendor-center/vendor/getVendorNamesByCodes HTTP/1.1
05-18  15:06:33.836  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-2] => Flipping property: chenfan-cloud-vendor-center.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:33.852  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-2] => Client: chenfan-cloud-vendor-center instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-vendor-center,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  15:06:33.858  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-2] => Using serverListUpdater PollingServerListUpdater
05-18  15:06:33.867  INFO  -|EBvUbagQUvMyNjch|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-2] => new ips(1) service: CC_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#CC_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"CC_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  15:06:33.871  INFO  -|EBvUbagQUvMyNjch|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-2] => current ips:(1) service: CC_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#CC_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"CC_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  15:06:33.882  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-2] => Flipping property: chenfan-cloud-vendor-center.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:33.883  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-2] => DynamicServerListLoadBalancer for client chenfan-cloud-vendor-center initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-vendor-center,current list of Servers=[10.228.84.57:8088],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.228.84.57:8088;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@4208ff79
05-18  15:06:34.206  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-2] => [VendorCenterServer#getVendorNamesByCodes] <--- HTTP/1.1 200  (532ms)
05-18  15:06:34.235  INFO  -|EBvUbagQUvMyNjch|- [RPC_LOG] [http-nio-8092-exec-2] => 开始请求服务=chenfan-cloud-baseinfo,URI=/dict/value/list
05-18  15:06:34.235  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-2] => [BaseInfoRemoteServer#getDictList] ---> GET http://chenfan-cloud-baseinfo/dict/value/list?dictProfileCode=Charge_Source_Type HTTP/1.1
05-18  15:06:34.258  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-2] => Flipping property: chenfan-cloud-baseinfo.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:34.260  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-2] => Client: chenfan-cloud-baseinfo instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-baseinfo,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  15:06:34.261  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-2] => Using serverListUpdater PollingServerListUpdater
05-18  15:06:34.263  INFO  -|EBvUbagQUvMyNjch|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-2] => new ips(1) service: CC_GROUP@@chenfan-cloud-baseinfo -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8102#DEFAULT#CC_GROUP@@chenfan-cloud-baseinfo","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8102,"serviceName":"CC_GROUP@@chenfan-cloud-baseinfo","weight":1.0}]
05-18  15:06:34.264  INFO  -|EBvUbagQUvMyNjch|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-2] => current ips:(1) service: CC_GROUP@@chenfan-cloud-baseinfo -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8102#DEFAULT#CC_GROUP@@chenfan-cloud-baseinfo","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8102,"serviceName":"CC_GROUP@@chenfan-cloud-baseinfo","weight":1.0}]
05-18  15:06:34.265  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-2] => Flipping property: chenfan-cloud-baseinfo.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:34.266  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-2] => DynamicServerListLoadBalancer for client chenfan-cloud-baseinfo initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-baseinfo,current list of Servers=[10.228.84.57:8102],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.228.84.57:8102;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@70a06c57
05-18  15:06:34.528  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-2] => [BaseInfoRemoteServer#getDictList] <--- HTTP/1.1 200  (292ms)
05-18  15:06:34.542  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.550  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1423(Long), 0(Integer), 8(Integer)
05-18  15:06:34.553  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.553  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1423 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.558  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.566  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1422(Long), 0(Integer), 8(Integer)
05-18  15:06:34.568  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.569  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1422 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 9 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.573  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.581  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1421(Long), 0(Integer), 8(Integer)
05-18  15:06:34.584  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.584  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1421 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.588  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.596  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1420(Long), 0(Integer), 8(Integer)
05-18  15:06:34.599  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.599  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1420 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.603  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.611  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1419(Long), 0(Integer), 8(Integer)
05-18  15:06:34.614  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.614  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1419 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.619  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.627  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1418(Long), 0(Integer), 8(Integer)
05-18  15:06:34.630  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.630  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1418 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.635  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.642  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1408(Long), 0(Integer), 8(Integer)
05-18  15:06:34.645  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.646  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1408 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.651  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.658  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1407(Long), 0(Integer), 8(Integer)
05-18  15:06:34.660  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.661  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1407 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.670  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.677  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1406(Long), 0(Integer), 8(Integer)
05-18  15:06:34.681  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 2
05-18  15:06:34.681  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1406 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 11 ms <==   |   [size]: ==> 2 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.686  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.694  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1405(Long), 0(Integer), 8(Integer)
05-18  15:06:34.697  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.697  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1405 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 11 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.702  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.710  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1404(Long), 0(Integer), 8(Integer)
05-18  15:06:34.713  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.713  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1404 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 11 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.719  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.727  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1401(Long), 0(Integer), 8(Integer)
05-18  15:06:34.732  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 2
05-18  15:06:34.733  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1401 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 13 ms <==   |   [size]: ==> 2 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.737  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.740  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1398(Long), 0(Integer), 8(Integer)
05-18  15:06:34.744  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.745  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1398 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.749  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.752  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1397(Long), 0(Integer), 8(Integer)
05-18  15:06:34.755  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 2
05-18  15:06:34.755  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1397 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 2 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.761  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.763  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1396(Long), 0(Integer), 8(Integer)
05-18  15:06:34.766  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.767  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1396 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.771  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.774  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1395(Long), 0(Integer), 8(Integer)
05-18  15:06:34.777  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.778  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1395 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.781  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.784  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1390(Long), 0(Integer), 8(Integer)
05-18  15:06:34.787  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 2
05-18  15:06:34.787  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1390 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 2 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.791  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.794  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1389(Long), 0(Integer), 8(Integer)
05-18  15:06:34.797  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.798  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1389 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.807  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.811  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1387(Long), 0(Integer), 8(Integer)
05-18  15:06:34.814  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 2
05-18  15:06:34.815  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1387 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 2 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.820  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.823  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1386(Long), 0(Integer), 8(Integer)
05-18  15:06:34.825  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.826  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1386 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.830  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.833  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1385(Long), 0(Integer), 8(Integer)
05-18  15:06:34.838  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 2
05-18  15:06:34.839  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1385 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 2 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.843  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.845  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1383(Long), 0(Integer), 8(Integer)
05-18  15:06:34.848  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.849  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1383 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.852  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.855  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1382(Long), 0(Integer), 8(Integer)
05-18  15:06:34.858  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.859  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1382 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.861  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-0] => Flipping property: chenfan-cloud-vendor-center.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:34.873  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.877  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1381(Long), 0(Integer), 8(Integer)
05-18  15:06:34.881  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.882  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1381 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.886  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.888  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1380(Long), 0(Integer), 8(Integer)
05-18  15:06:34.894  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.895  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1380 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 8 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.903  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.907  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1379(Long), 0(Integer), 8(Integer)
05-18  15:06:34.912  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.913  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1379 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 8 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.917  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.920  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1377(Long), 0(Integer), 8(Integer)
05-18  15:06:34.925  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 0
05-18  15:06:34.925  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1377 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  15:06:34.930  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.932  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1376(Long), 0(Integer), 8(Integer)
05-18  15:06:34.937  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.938  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1376 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.942  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.945  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1371(Long), 0(Integer), 8(Integer)
05-18  15:06:34.951  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 1
05-18  15:06:34.952  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1371 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 9 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.959  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==>  Preparing: SELECT invoice_settlement_id,invoice_settlement_no,invoice_id,invoice_no,invoice_settlement_status,brand_id,balance,invoice_settlement_rate,invoice_settlement_money,clear_no,clear_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date,customer_invoice_no,customer_invoice_date,payment_method,is_invoice,payment_remark,accessory,accname,vendor_letter_head,bank,bank_accounts FROM cf_invoice_settlement WHERE (invoice_id = ? AND invoice_settlement_status NOT IN (?,?))
05-18  15:06:34.964  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => ==> Parameters: 1366(Long), 0(Integer), 8(Integer)
05-18  15:06:34.969  DEBUG -|EBvUbagQUvMyNjch|- [com.chenfan.finance.dao.CfInvoiceSettlementMapper.selectList] [http-nio-8092-exec-2] => <==      Total: 2
05-18  15:06:34.970  INFO  -|EBvUbagQUvMyNjch|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> select * from cf_invoice_settlement where (invoice_id = 1366 and invoice_settlement_status not in (0,8)) <==   |   [time]: ==> 9 ms <==   |   [size]: ==> 2 <==   |   [result]: ==> [CfInvoiceSettlement ...  <==
05-18  15:06:34.988  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestParams:     pageSize=30&pageNum=1
05-18  15:06:34.988  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] => Total:             1737ms
05-18  15:06:34.988  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           //                      
05-18  15:06:34.988  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          //                       
05-18  15:06:34.988  INFO  -|EBvUbagQUvMyNjch|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================//                        



05-18  15:06:35.262  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-1] => Flipping property: chenfan-cloud-baseinfo.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:37.753  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================\\                      
05-18  15:06:37.753  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          \\                     
05-18  15:06:37.753  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           \\                    
05-18  15:06:37.754  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestURI:        /charge/verifyChargeList
05-18  15:06:37.770  INFO  -|EBvUbagQUvMyNjye|- [com.chenfan.finance.controller.ChargeController] [http-nio-8092-exec-3] => 获取的关联的brandIds:null
05-18  15:06:37.772  INFO  -|EBvUbagQUvMyNjye|- [RPC_LOG] [http-nio-8092-exec-3] => 开始请求服务=chenfan-cloud-baseinfo,URI=/dict/value/list
05-18  15:06:37.772  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-3] => [BaseInfoRemoteServer#getDictList] ---> GET http://chenfan-cloud-baseinfo/dict/value/list?dictProfileCode=charge_type HTTP/1.1
05-18  15:06:37.797  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-3] => [BaseInfoRemoteServer#getDictList] <--- HTTP/1.1 200  (24ms)
05-18  15:06:37.828  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.CfChargeMapper.verifyChargeListPre_COUNT] [http-nio-8092-exec-3] => ==>  Preparing: SELECT count(0) FROM (SELECT `rrt`.rd_record_type, GROUP_CONCAT(DISTINCT b.balance SEPARATOR ',') AS balances, GROUP_CONCAT(DISTINCT b.brand_id SEPARATOR ',') AS brands, b.product_code, b.goods_name AS goodsName, GROUP_CONCAT(DISTINCT b.sales_type SEPARATOR ',') AS salesTypeAll, b.arap_type, b.price_pp, b.tax_rate, SUM(b.arrival_qty) AS arrival_qty, SUM(b.rejection_qty) AS rejection_qty, SUM(b.actual_qty) AS actual_qty, SUM(b.defective_rejection_qty) AS defective_rejection_qty, GROUP_CONCAT(postpone_detail) AS postpone_detail, SUM(IFNULL(b.postpone_deductions_total, 0)) AS postpone_deductions_total, SUM(IFNULL(qc.qa_deductions, 0)) AS qa_deductions, SUM(b.actual_qty) - SUM(defective_rejection_qty) AS settlementQty, b.costs_price * (SUM(b.actual_qty) - SUM(defective_rejection_qty)) AS settlementAmount, b.costs_price * (SUM(b.actual_qty) - SUM(defective_rejection_qty)) - SUM(IFNULL(b.postpone_deductions_total, 0)) - SUM(IFNULL(money, 0)) - SUM(IFNULL(qc.qa_deductions, 0)) AS settlementAmountActual, SUM(IFNULL(c.bargain, 0) + IFNULL(c.retainage, 0)) AS advancepay_amount, SUM(IFNULL(c.money, 0)) AS advancepay_amount_actual, GROUP_CONCAT(b.charge_id) AS chargeIds, GROUP_CONCAT(a.charge_id) AS chargeIdsDelay, GROUP_CONCAT(qc.qa_charge_ids) AS chargeIdsQc, GROUP_CONCAT(c.payid) AS payIds, b.is_offset FROM (SELECT GROUP_CONCAT(cc.charge_id) AS charge_id, cc.charge_source_detail_id, cc.charge_source_code, cc.charge_type, cc.balance, cc.brand_id, cc.product_code, cc.charge_source_detail_code, cc.sales_type, cc.arap_type, cc.price_pp, cc.tax_rate, cc.is_offset, ifnull(sum(cci.arrival_qty), 0) AS arrival_qty, ifnull(sum(cci.rejection_qty), 0) AS rejection_qty, ifnull(sum(cci.actual_qty), 0) AS actual_qty, ifnull(sum(cci.defective_rejection_qty), 0) AS defective_rejection_qty, postpone_detail, IFNULL(cci.postpone_deductions_total, 0) AS postpone_deductions_total, cci.qa_deductions, cci.red_deductions, cci.tax_diff, cci.others_deductions, ifnull(cci.costs_price, cc.price_pp) AS costs_price, cci.goods_name FROM cf_charge cc LEFT JOIN cf_charge_in cci ON cci.charge_id = cc.charge_id WHERE cc.check_status != 0 AND (charge_type = ? OR charge_type = ?) AND cc.invoice_no IS NULL GROUP BY charge_source_detail_id, charge_type, product_code, price_pp, balance, tax_rate, brand_id, is_offset) b LEFT JOIN (SELECT cc.charge_source_detail_id, cc.amount_pp, cc.charge_id FROM cf_rd_record_detail rdd INNER JOIN cf_charge cc ON rdd.rd_record_detail_id = cc.charge_source_detail_id WHERE rdd.create_charge_flag = 1 AND cc.check_status != 0 AND charge_type = ? AND cc.invoice_no IS NULL GROUP BY charge_source_detail_id, charge_type) a ON b.charge_source_detail_id = a.charge_source_detail_id LEFT JOIN (SELECT aa.po_id, rdd.rd_record_detail_id, aa.advance_pay_id AS payid, sum(aa.money) AS money, ph.bargain AS bargain, ph.retainage AS retainage FROM advancepay_application aa LEFT JOIN cf_po_header ph ON ph.po_id = aa.po_id INNER JOIN (SELECT z.rd_record_detail_id, y.po_id FROM cf_rd_record_detail z LEFT JOIN cf_po_header y ON z.po_id = y.po_id GROUP BY po_id) rdd ON rdd.po_id = aa.po_id WHERE aa.state = 8 AND aa.invoice_no IS NULL GROUP BY aa.po_id) c ON c.rd_record_detail_id = b.charge_source_detail_id LEFT JOIN (SELECT cqtd.rd_record_detail_id, sum(cc.amount_pp) AS qa_deductions, GROUP_CONCAT(cc.charge_id) AS qa_charge_ids FROM cf_qc_task_detail cqtd INNER JOIN cf_charge cc ON cqtd.qc_task_detail_log_id = cc.charge_source_detail_id WHERE cqtd.create_charge_flag = 1 AND cc.check_status != 0 AND cc.charge_type = ? AND cc.invoice_no IS NULL GROUP BY rd_record_detail_id) `qc` ON b.charge_source_detail_id = qc.rd_record_detail_id LEFT JOIN (SELECT crrd.rd_record_detail_id, crr.rd_record_type FROM cf_rd_record_detail `crrd` LEFT JOIN cf_rd_record `crr` ON crrd.rd_record_id = crr.rd_record_id) `rrt` ON b.charge_source_detail_id = `rrt`.rd_record_detail_id GROUP BY brand_id, balance, product_code, costs_price, tax_rate) table_count
05-18  15:06:37.832  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.CfChargeMapper.verifyChargeListPre_COUNT] [http-nio-8092-exec-3] => ==> Parameters: 1(Integer), 7(Integer), 8(Integer), 9(Integer)
05-18  15:06:37.901  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.CfChargeMapper.verifyChargeListPre_COUNT] [http-nio-8092-exec-3] => <==      Total: 1
05-18  15:06:37.901  INFO  -|EBvUbagQUvMyNjye|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> select * from cf_rd_record_detail `crrd` left join cf_rd_record `crr` on crrd.rd_record_id = crr.rd_record_id) `rrt` on b.charge_source_detail_id = `rrt`.rd_record_detail_id group by brand_id, balance, product_code, costs_price, tax_rate) table_count <==   |   [time]: ==> 71 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [227]  <==
05-18  15:06:37.903  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.CfChargeMapper.verifyChargeListPre] [http-nio-8092-exec-3] => ==>  Preparing: SELECT `rrt`.rd_record_type, GROUP_CONCAT( DISTINCT b.balance SEPARATOR ',' ) AS balances, GROUP_CONCAT( DISTINCT b.brand_id SEPARATOR ',' ) AS brands, b.product_code, b.goods_name as goodsName, GROUP_CONCAT( DISTINCT b.sales_type SEPARATOR ',' ) AS salesTypeAll, b.arap_type, b.price_pp, b.tax_rate, SUM( b.arrival_qty ) AS arrival_qty, SUM( b.rejection_qty ) AS rejection_qty, SUM( b.actual_qty ) AS actual_qty, SUM( b.defective_rejection_qty ) AS defective_rejection_qty, GROUP_CONCAT( postpone_detail ) AS postpone_detail, SUM( IFNULL( b.postpone_deductions_total, 0 )) AS postpone_deductions_total, SUM(IFNULL( qc.qa_deductions,0) ) AS qa_deductions, SUM( b.actual_qty ) - SUM( defective_rejection_qty ) AS settlementQty, b.costs_price * ( SUM( b.actual_qty ) - SUM( defective_rejection_qty )) AS settlementAmount, b.costs_price * ( SUM( b.actual_qty ) - SUM( defective_rejection_qty )) - SUM( IFNULL( b.postpone_deductions_total, 0 )) - SUM( IFNULL( money, 0 )) - SUM(IFNULL( qc.qa_deductions,0) ) AS settlementAmountActual, SUM( IFNULL( c.bargain, 0 ) + IFNULL( c.retainage, 0 )) AS advancepay_amount, SUM( IFNULL( c.money, 0 )) AS advancepay_amount_actual, GROUP_CONCAT( b.charge_id ) AS chargeIds, GROUP_CONCAT( a.charge_id ) AS chargeIdsDelay, GROUP_CONCAT( qc.qa_charge_ids) AS chargeIdsQc, GROUP_CONCAT( c.payid ) AS payIds, b.is_offset FROM ( SELECT GROUP_CONCAT( cc.charge_id ) AS charge_id, cc.charge_source_detail_id, cc.charge_source_code, cc.charge_type, cc.balance, cc.brand_id, cc.product_code, cc.charge_source_detail_code, cc.sales_type, cc.arap_type, cc.price_pp, cc.tax_rate, cc.is_offset, ifnull(sum(cci.arrival_qty), 0) as arrival_qty, ifnull(sum(cci.rejection_qty), 0) as rejection_qty, ifnull(sum(cci.actual_qty), 0) as actual_qty, ifnull(sum(cci.defective_rejection_qty), 0) as defective_rejection_qty, postpone_detail, IFNULL( cci.postpone_deductions_total, 0 ) AS postpone_deductions_total, cci.qa_deductions, cci.red_deductions, cci.tax_diff, cci.others_deductions, ifnull(cci.costs_price, cc.price_pp) as costs_price, cci.goods_name FROM cf_charge cc LEFT JOIN cf_charge_in cci ON cci.charge_id = cc.charge_id WHERE cc.check_status != 0 AND (charge_type = ? OR charge_type = ?) AND cc.invoice_no is null GROUP BY charge_source_detail_id, charge_type, product_code, price_pp, balance, tax_rate, brand_id, is_offset ) b LEFT JOIN ( SELECT cc.charge_source_detail_id, cc.amount_pp, cc.charge_id FROM cf_rd_record_detail rdd INNER JOIN cf_charge cc ON rdd.rd_record_detail_id = cc.charge_source_detail_id WHERE rdd.create_charge_flag = 1 AND cc.check_status != 0 AND charge_type = ? AND cc.invoice_no is null GROUP BY charge_source_detail_id, charge_type ) a ON b.charge_source_detail_id = a.charge_source_detail_id LEFT JOIN ( SELECT aa.po_id, rdd.rd_record_detail_id, aa.advance_pay_id AS payid, sum( aa.money ) AS money, ph.bargain AS bargain, ph.retainage AS retainage FROM advancepay_application aa LEFT JOIN cf_po_header ph ON ph.po_id = aa.po_id INNER JOIN ( SELECT z.rd_record_detail_id, y.po_id FROM cf_rd_record_detail z LEFT JOIN cf_po_header y ON z.po_id = y.po_id GROUP BY po_id ) rdd ON rdd.po_id = aa.po_id WHERE aa.state = 8 AND aa.invoice_no is null GROUP BY aa.po_id ) c ON c.rd_record_detail_id = b.charge_source_detail_id LEFT JOIN ( SELECT cqtd.rd_record_detail_id, sum(cc.amount_pp) as qa_deductions, GROUP_CONCAT(cc.charge_id) as qa_charge_ids FROM cf_qc_task_detail cqtd INNER JOIN cf_charge cc ON cqtd.qc_task_detail_log_id = cc.charge_source_detail_id WHERE cqtd.create_charge_flag = 1 AND cc.check_status != 0 AND cc.charge_type = ? AND cc.invoice_no is null GROUP BY rd_record_detail_id ) `qc` ON b.charge_source_detail_id = qc.rd_record_detail_id LEFT JOIN ( SELECT crrd.rd_record_detail_id,crr.rd_record_type FROM cf_rd_record_detail `crrd` LEFT JOIN cf_rd_record `crr` ON crrd.rd_record_id =crr.rd_record_id ) `rrt` ON b.charge_source_detail_id = `rrt`.rd_record_detail_id GROUP BY brand_id, balance, product_code, costs_price, tax_rate LIMIT ?
05-18  15:06:37.906  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.CfChargeMapper.verifyChargeListPre] [http-nio-8092-exec-3] => ==> Parameters: 1(Integer), 7(Integer), 8(Integer), 9(Integer), 10(Integer)
05-18  15:06:37.968  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.CfChargeMapper.verifyChargeListPre] [http-nio-8092-exec-3] => <==      Total: 10
05-18  15:06:37.968  INFO  -|EBvUbagQUvMyNjye|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> select * from cf_rd_record_detail `crrd` left join cf_rd_record `crr` on crrd.rd_record_id =crr.rd_record_id ) `rrt` on b.charge_source_detail_id = `rrt`.rd_record_detail_id group by brand_id, balance, product_code, costs_price, tax_rate limit 10  <==   |   [time]: ==> 64 ms <==   |   [size]: ==> 10 <==   |   [result]: ==> [CfChargeListVO(char ...  <==
05-18  15:06:37.969  INFO  -|EBvUbagQUvMyNjye|- [RPC_LOG] [http-nio-8092-exec-3] => 开始请求服务=chenfan-cloud-vendor-center,URI=/vendor/getVendorNamesByCodes
05-18  15:06:37.970  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-3] => [VendorCenterServer#getVendorNamesByCodes] ---> POST http://chenfan-cloud-vendor-center/vendor/getVendorNamesByCodes HTTP/1.1
05-18  15:06:37.988  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-3] => [VendorCenterServer#getVendorNamesByCodes] <--- HTTP/1.1 200  (18ms)
05-18  15:06:37.992  INFO  -|EBvUbagQUvMyNjye|- [RPC_LOG] [http-nio-8092-exec-3] => 开始请求服务=chenfan-cloud-baseinfo,URI=/api/brand/getBrandByBrandIdList
05-18  15:06:37.993  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-3] => [BaseInfoRemoteServer#getBrandByBrandIdList] ---> POST http://chenfan-cloud-baseinfo/api/brand/getBrandByBrandIdList HTTP/1.1
05-18  15:06:38.033  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-3] => [BaseInfoRemoteServer#getBrandByBrandIdList] <--- HTTP/1.1 200  (40ms)
05-18  15:06:38.050  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.RuleBillingHeaderMapper.selectList] [http-nio-8092-exec-3] => ==>  Preparing: SELECT rule_billing_id,rule_billing_no,rule_billing_name,business_type,rule_billing_status,begin_date,end_date,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date FROM rule_billing_header WHERE (business_type = ? AND rule_billing_status = ? AND begin_date <= ? AND end_date >= ?)
05-18  15:06:38.055  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.RuleBillingHeaderMapper.selectList] [http-nio-8092-exec-3] => ==> Parameters: 1(Integer), 1(Integer), 2021-05-18(LocalDate), 2021-05-18(LocalDate)
05-18  15:06:38.058  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.RuleBillingHeaderMapper.selectList] [http-nio-8092-exec-3] => <==      Total: 1
05-18  15:06:38.059  INFO  -|EBvUbagQUvMyNjye|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> select * from rule_billing_header where (business_type = 1 and rule_billing_status = 1 and begin_date <= '2021-05-18' and end_date >= '2021-05-18') <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [RuleBillingHeader(r ...  <==
05-18  15:06:38.065  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.RuleBillingDetailMapper.selectList] [http-nio-8092-exec-3] => ==>  Preparing: SELECT rule_billing_detail_id,rule_billing_id,rule_type,goods_range,rule_level,deduction_rate,rule_level_condition,is_delete,brand_ids,qc_deduction_type,middle_class_ids,season,deduction_amount FROM rule_billing_detail WHERE (rule_billing_id = ? AND is_delete = ?)
05-18  15:06:38.068  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.RuleBillingDetailMapper.selectList] [http-nio-8092-exec-3] => ==> Parameters: 19(Long), 0(Integer)
05-18  15:06:38.076  DEBUG -|EBvUbagQUvMyNjye|- [com.chenfan.finance.dao.RuleBillingDetailMapper.selectList] [http-nio-8092-exec-3] => <==      Total: 17
05-18  15:06:38.077  INFO  -|EBvUbagQUvMyNjye|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> select * from rule_billing_detail where (rule_billing_id = 19 and is_delete = 0) <==   |   [time]: ==> 10 ms <==   |   [size]: ==> 17 <==   |   [result]: ==> [RuleBillingDetail(r ...  <==
05-18  15:06:38.089  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestParams:     pageSize=10&total=0&isInvoice=0&pageNum=1
05-18  15:06:38.089  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] => Total:             336ms
05-18  15:06:38.090  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           //                      
05-18  15:06:38.090  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          //                       
05-18  15:06:38.090  INFO  -|EBvUbagQUvMyNjye|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================//                        



05-18  15:06:40.958  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] => ========================\\                      
05-18  15:06:40.958  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] =>                          \\                     
05-18  15:06:40.959  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] =>                           \\                    
05-18  15:06:40.959  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] => RequestURI:        /cfClear/list
05-18  15:06:40.967  INFO  -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-6] => 获取的关联的brandIds:null,companyIds:null,userIds:null
05-18  15:06:40.975  INFO  -|EBvUbagQUvMyNj8R|- [RPC_LOG] [http-nio-8092-exec-6] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  15:06:40.975  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-6] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  15:06:41.003  INFO  -|EBvUbagQUvMyNj8R|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-6] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:41.005  INFO  -|EBvUbagQUvMyNj8R|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-6] => Client: chenfan-cloud-privilege instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-privilege,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  15:06:41.005  INFO  -|EBvUbagQUvMyNj8R|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-6] => Using serverListUpdater PollingServerListUpdater
05-18  15:06:41.007  INFO  -|EBvUbagQUvMyNj8R|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-6] => new ips(1) service: CC_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8099#DEFAULT#CC_GROUP@@chenfan-cloud-privilege","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"CC_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  15:06:41.008  INFO  -|EBvUbagQUvMyNj8R|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-6] => current ips:(1) service: CC_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8099#DEFAULT#CC_GROUP@@chenfan-cloud-privilege","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"CC_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  15:06:41.010  INFO  -|EBvUbagQUvMyNj8R|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-6] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:41.011  INFO  -|EBvUbagQUvMyNj8R|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-6] => DynamicServerListLoadBalancer for client chenfan-cloud-privilege initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-privilege,current list of Servers=[10.228.84.57:8099],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.228.84.57:8099;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@a128c2b
05-18  15:06:41.373  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-6] => [PrivilegeUserServer#listUsers] <--- HTTP/1.1 200  (397ms)
05-18  15:06:41.393  INFO  -|EBvUbagQUvMyNj8R|- [RPC_LOG] [http-nio-8092-exec-6] => 开始请求服务=chenfan-cloud-vendor-center,URI=/vendor/getAllVendorListV2
05-18  15:06:41.393  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-6] => [VendorCenterServer#getAllVendorList] ---> POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2 HTTP/1.1
05-18  15:06:41.516  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-6] => [VendorCenterServer#getAllVendorList] <--- HTTP/1.1 200  (122ms)
05-18  15:06:41.536  INFO  -|EBvUbagQUvMyNj8R|- [RPC_LOG] [http-nio-8092-exec-6] => 开始请求服务=chenfan-cloud-baseinfo,URI=/api/brand/getBrandByBrandIdList
05-18  15:06:41.536  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-6] => [BaseInfoRemoteServer#getBrandByBrandIdList] ---> POST http://chenfan-cloud-baseinfo/api/brand/getBrandByBrandIdList HTTP/1.1
05-18  15:06:41.568  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-6] => [BaseInfoRemoteServer#getBrandByBrandIdList] <--- HTTP/1.1 200  (31ms)
05-18  15:06:41.579  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfClearHeaderMapper.selectList_COUNT] [http-nio-8092-exec-6] => ==>  Preparing: SELECT count(0) FROM cf_clear_header WHERE (clear_status <> ?)
05-18  15:06:41.581  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfClearHeaderMapper.selectList_COUNT] [http-nio-8092-exec-6] => ==> Parameters: 0(Integer)
05-18  15:06:41.583  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfClearHeaderMapper.selectList_COUNT] [http-nio-8092-exec-6] => <==      Total: 1
05-18  15:06:41.585  INFO  -|EBvUbagQUvMyNj8R|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-6] =>     [sql]: ==> SELECT count(0) FROM cf_clear_header WHERE (clear_status <> 0) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [723]  <==
05-18  15:06:41.586  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfClearHeaderMapper.selectList] [http-nio-8092-exec-6] => ==>  Preparing: SELECT clear_id,clear_no,invoice_no,clear_method,clear_status,job_type,actual_ar_ap_date,brand_id,balance,fi_user,bank,bank_no,bank_amount,check_no,currency_code,exchange_rate,clear_date,clear_by,clear_debit,clear_credit,clear_type,clear_balance,now_clear_debit,now_clear_credit,now_clear_type,now_clear_balance,last_balance_debit,last_balance_credit,last_balance_type,last_balance_balance,now_balance_debit,now_balance_credit,now_balance_type,now_balance_balance,remark,company_id,create_by,create_name,create_date,update_by,update_name,update_date FROM cf_clear_header WHERE (clear_status <> ?) ORDER BY create_date DESC LIMIT ?
05-18  15:06:41.588  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfClearHeaderMapper.selectList] [http-nio-8092-exec-6] => ==> Parameters: 0(Integer), 30(Integer)
05-18  15:06:41.599  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfClearHeaderMapper.selectList] [http-nio-8092-exec-6] => <==      Total: 30
05-18  15:06:41.600  INFO  -|EBvUbagQUvMyNj8R|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-6] =>     [sql]: ==> select * from cf_clear_header where (clear_status <> 0) order by create_date desc limit 30  <==   |   [time]: ==> 13 ms <==   |   [size]: ==> 30 <==   |   [result]: ==> [CfClearHeader(clear ...  <==
05-18  15:06:41.609  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-6] => ==>  Preparing: SELECT charge_id,charge_code,charge_source_type,charge_type,check_status,arap_type,split_type,charge_source_code,charge_source_detail,currency_code,exchange_rate,tax_rate,charge_unit,charge_qty,price_pp,amount_pp,balance,finance_entity,charge_month_belong_to,tax_invoice_no,tax_invoice_date,invoice_no,invoice_title,invoice_title_name,invoice_date,clear_no,actual_amount,actual_date,actual_history_date,remark,charge_date,bill_source_type,invoice_entrance_date,sett_template,create_by,create_name,create_date,company_id,tenant_id,update_by,update_name,update_date,parent_id,split_id,brand_id FROM cf_charge_common WHERE (clear_no IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?))
05-18  15:06:41.612  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-6] => ==> Parameters: CL2105179998(String), CL2105170002(String), CL2105140004(String), CL2105140003(String), CL2105130001(String), CL2105120004(String), CL2105110010(String), CL2105110009(String), CL2105110005(String), CL2105110004(String), CL2105110003(String), CL2105110002(String), CL2105110001(String), CL2105100006(String), CL2105100003(String), CL2105100002(String), CL2105080004(String), CL2105080003(String), CL2105080002(String), CL2105080001(String), CL2105070006(String), CL2105070005(String), CL2105070004(String), CL2105070003(String), CL2105070002(String), CL2105070001(String), CL2105069996(String), CL2104300014(String), CL2104300013(String), CL2104300012(String)
05-18  15:06:41.622  DEBUG -|EBvUbagQUvMyNj8R|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-6] => <==      Total: 5
05-18  15:06:41.623  INFO  -|EBvUbagQUvMyNj8R|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-6] =>     [sql]: ==> select * from cf_charge_common where (clear_no in ('cl2105179998','cl2105170002','cl2105140004','cl2105140003','cl2105130001','cl2105120004','cl2105110010','cl2105110009','cl2105110005','cl2105110004','cl2105110003','cl2105110002','cl2105110001','cl2105100006','cl2105100003','cl2105100002','cl2105080004','cl2105080003','cl2105080002','cl2105080001','cl2105070006','cl2105070005','cl2105070004','cl2105070003','cl2105070002','cl2105070001','cl2105069996','cl2104300014','cl2104300013','cl2104300012')) <==   |   [time]: ==> 12 ms <==   |   [size]: ==> 5 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  15:06:41.643  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] => RequestParams:     
05-18  15:06:41.643  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] => Total:             685ms
05-18  15:06:41.643  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] =>                           //                      
05-18  15:06:41.643  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] =>                          //                       
05-18  15:06:41.643  INFO  -|EBvUbagQUvMyNj8R|- [HTTP_LOG] [http-nio-8092-exec-6] => ========================//                        



05-18  15:06:42.007  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-0] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  15:06:45.094  INFO  -|EBvUbagQUvMyNjch|- [com.netflix.loadbalancer.PollingServerListUpdater] [Thread-103] => Shutting down the Executor Pool for PollingServerListUpdater
05-18  15:06:45.100  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [SpringContextShutdownHook] => Shutting down ExecutorService 'sheduleClearMemory'
05-18  15:06:45.104  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [SpringContextShutdownHook] => De-registering from Nacos Server now...
05-18  15:06:45.104  INFO  -||- [com.alibaba.nacos.client.naming] [SpringContextShutdownHook] => [BEAT] removing beat: CC_GROUP@@chenfan-cloud-finance:10.228.84.57:8092 from beat map.
05-18  15:06:45.104  INFO  -||- [com.alibaba.nacos.client.naming] [SpringContextShutdownHook] => [DEREGISTER-SERVICE] test deregistering service CC_GROUP@@chenfan-cloud-finance with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{},"port":8092,"weight":1.0}
05-18  15:06:45.106  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [SpringContextShutdownHook] => De-registration finished.
05-18  15:06:45.108  INFO  -||- [com.xxl.job.core.server.EmbedServer] [Thread-79] => >>>>>>>>>>> xxl-job remoting server stop.
05-18  15:06:45.116  INFO  -||- [com.xxl.job.core.thread.ExecutorRegistryThread] [xxl-job, executor ExecutorRegistryThread] => >>>>>>>>>>> xxl-job registry-remove success, registryParam:RegistryParam{registryGroup='EXECUTOR', registryKey='chenfan-finance', registryValue='http://10.228.84.57:10000/'}, registryResult:ReturnT [code=200, msg=null, content=null]
05-18  15:06:45.116  INFO  -||- [com.xxl.job.core.thread.ExecutorRegistryThread] [xxl-job, executor ExecutorRegistryThread] => >>>>>>>>>>> xxl-job, executor registry thread destory.
05-18  15:06:45.116  INFO  -||- [com.xxl.job.core.server.EmbedServer] [SpringContextShutdownHook] => >>>>>>>>>>> xxl-job remoting server destroy success.
05-18  15:06:45.117  INFO  -||- [com.xxl.job.core.thread.TriggerCallbackThread] [xxl-job, executor TriggerCallbackThread] => >>>>>>>>>>> xxl-job, executor callback thread destory.
05-18  15:06:45.117  INFO  -||- [com.xxl.job.core.thread.TriggerCallbackThread] [Thread-78] => >>>>>>>>>>> xxl-job, executor retry callback thread destory.
05-18  15:06:45.117  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [SpringContextShutdownHook] => Shutting down ExecutorService 'sheduleClearMemory'
05-18  15:06:45.131  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10911] result: true
05-18  15:06:45.131  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10909] result: true
05-18  15:06:45.131  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:9876] result: true
05-18  15:06:45.137  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:9876] result: true
05-18  15:06:45.137  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10911] result: true
05-18  15:06:45.137  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10909] result: true
05-18  15:06:45.145  INFO  -||- [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [SpringContextShutdownHook] => Closing JPA EntityManagerFactory for persistence unit 'default'
05-18  15:06:45.148  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [SpringContextShutdownHook] => {dataSource-1} closing ...
05-18  15:06:45.152  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [SpringContextShutdownHook] => {dataSource-1} closed
