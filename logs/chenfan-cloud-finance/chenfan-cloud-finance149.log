05-18  10:24:27.425  INFO  -||- [com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor] [main] => LOCAL_SNAPSHOT_PATH:C:\Users\2797\nacos\config
05-18  10:24:27.448  INFO  -||- [com.alibaba.nacos.client.config.impl.Limiter] [main] => limitTime:5.0
05-18  10:24:27.463  WARN  -||- [com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder] [main] => Ignore the empty nacos configuration and get it based on dataId[cc] & group[TEST_GROUP]
05-18  10:24:27.465  WARN  -||- [com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder] [main] => Ignore the empty nacos configuration and get it based on dataId[cc.yaml] & group[TEST_GROUP]
05-18  10:24:27.467  INFO  -||- [com.alibaba.nacos.client.config.utils.JVMUtil] [main] => isMultiInstance:false
05-18  10:24:27.475  INFO  -||- [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration] [main] => Located property source: [BootstrapPropertySource {name='bootstrapProperties-cc-test.yaml,TEST_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-cc.yaml,TEST_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-cc,TEST_GROUP'}]
05-18  10:24:27.526  INFO  -||- [com.chenfan.finance.FinanceApplication] [main] => The following profiles are active: test
05-18  10:24:28.787  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
05-18  10:24:28.792  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
05-18  10:24:29.064  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  10:24:29.064  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data JPA repositories in DEFAULT mode.
05-18  10:24:29.106  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 35ms. Found 0 JPA repository interfaces.
05-18  10:24:29.111  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  10:24:29.111  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
05-18  10:24:29.129  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 17ms. Found 0 MongoDB repository interfaces.
05-18  10:24:29.139  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  10:24:29.140  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data Redis repositories in DEFAULT mode.
05-18  10:24:29.164  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
05-18  10:24:29.227  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
05-18  10:24:29.385  INFO  -||- [org.springframework.context.annotation.ConfigurationClassPostProcessor] [main] => Cannot enhance @Configuration bean definition 'com.chenfan.ccp.autoconfigure.GlobalMqMessageConfigure' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
05-18  10:24:29.472  INFO  -||- [org.springframework.cloud.context.scope.GenericScope] [main] => BeanFactory id=a99f0510-61d8-31da-b49e-dee2168a9b76
05-18  10:24:29.507  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.BaseInfoRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.507  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.BaseRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.508  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.McnRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.509  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.PrivilegeUserServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.510  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.PurchaseRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.511  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.TaskRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.512  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.VendorCenterServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.513  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.process.client.ProcessClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:29.515  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.code.generate.CodeGenerateClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  10:24:30.190  INFO  -||- [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] => Tomcat initialized with port(s): 8092 (http)
05-18  10:24:30.199  INFO  -||- [org.apache.catalina.core.StandardService] [main] => Starting service [Tomcat]
05-18  10:24:30.199  INFO  -||- [org.apache.catalina.core.StandardEngine] [main] => Starting Servlet engine: [Apache Tomcat/9.0.37]
05-18  10:24:30.323  INFO  -||- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [main] => Initializing Spring embedded WebApplicationContext
05-18  10:24:30.323  INFO  -||- [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] => Root WebApplicationContext: initialization completed in 2774 ms
05-18  10:24:30.977  INFO  -||- [org.redisson.Version] [main] => Redisson 3.14.0
05-18  10:24:31.400  INFO  -||- [org.redisson.connection.pool.MasterPubSubConnectionPool] [redisson-netty-2-19] => 1 connections initialized for /10.228.81.233:6379
05-18  10:24:31.421  INFO  -||- [org.redisson.connection.pool.MasterConnectionPool] [redisson-netty-2-19] => 24 connections initialized for /10.228.81.233:6379
05-18  10:24:31.923  INFO  -||- [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure] [main] => Init DruidDataSource
05-18  10:24:32.030  WARN  -||- [com.alibaba.druid.pool.DruidDataSource] [main] => removeAbandoned is true, not use in production.
05-18  10:24:32.153  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [main] => {dataSource-1} inited
05-18  10:24:32.311  INFO  -||- [org.hibernate.jpa.internal.util.LogHelper] [main] => HHH000204: Processing PersistenceUnitInfo [name: default]
05-18  10:24:32.361  INFO  -||- [org.hibernate.Version] [main] => HHH000412: Hibernate ORM core version 5.4.18.Final
05-18  10:24:32.479  INFO  -||- [org.hibernate.annotations.common.Version] [main] => HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
05-18  10:24:32.607  INFO  -||- [org.hibernate.dialect.Dialect] [main] => HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
05-18  10:24:32.854  INFO  -||- [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] => HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
05-18  10:24:32.867  INFO  -||- [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] => Initialized JPA EntityManagerFactory for persistence unit 'default'
05-18  10:24:33.320  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.CfBankAndCashMapper.delete] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Delete]
05-18  10:24:34.023  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingDetailMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
05-18  10:24:34.028  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingDetailMapper.updateById] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.UpdateById]
05-18  10:24:34.042  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingHeaderMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
05-18  10:24:34.047  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingHeaderMapper.selectById] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.SelectById]
05-18  10:24:34.288  WARN  -||- [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] => spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
05-18  10:24:36.327  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Property :null
05-18  10:24:36.328  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Environment :null
05-18  10:24:36.328  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Property :null
05-18  10:24:36.434  INFO  -||- [org.mongodb.driver.cluster] [main] => Cluster created with settings {hosts=[10.228.86.202:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
05-18  10:24:36.808  INFO  -||- [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] => Exposing 1 endpoint(s) beneath base path '/actuator'
05-18  10:24:37.022  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [main] => Initializing ExecutorService 'sheduleClearMemory'
05-18  10:24:37.031  INFO  -||- [com.chenfan.finance.config.XxlJobConfig] [main] => >>>>>>>>>>> xxl-job config init.
05-18  10:24:37.081  WARN  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => No URLs will be polled as dynamic configuration sources.
05-18  10:24:37.081  INFO  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
05-18  10:24:37.085  WARN  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => No URLs will be polled as dynamic configuration sources.
05-18  10:24:37.085  INFO  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
05-18  10:24:37.482  INFO  -||- [org.mongodb.driver.cluster] [cluster-ClusterId{value='60a32564a5a3d33f24911441', description='null'}-10.228.86.202:27017] => Exception in monitor thread while connecting to server 10.228.86.202:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:128)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
05-18  10:24:38.091  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:qcTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@53941224[class com.chenfan.finance.job.FinanceJob#qcTaskJob]
05-18  10:24:38.092  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:monitoringTask, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@10dad714[class com.chenfan.finance.job.FinanceJob#monitoringTask]
05-18  10:24:38.092  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:cfWdtRdCalculateTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@5bf3298f[class com.chenfan.finance.job.FinanceJob#cfWdtRdCalculateTaskJob]
05-18  10:24:38.092  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:cfRdCalculateTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@67e321e0[class com.chenfan.finance.job.FinanceJob#cfRdCalculateTaskJob]
05-18  10:24:38.209  INFO  -||- [com.xxl.job.core.server.EmbedServer] [Thread-81] => >>>>>>>>>>> xxl-job remoting server start success, nettype = class com.xxl.job.core.server.EmbedServer, port = 9999
05-18  10:24:39.643  INFO  -||- [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] => Tomcat started on port(s): 8092 (http) with context path ''
05-18  10:24:39.646  INFO  -||- [com.alibaba.nacos.client.naming] [main] => [BEAT] adding beat: {"cluster":"DEFAULT","ip":"10.228.84.57","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8092,"scheduled":false,"serviceName":"TEST_GROUP@@chenfan-cloud-finance","stopped":false,"weight":1.0} to beat map.
05-18  10:24:39.655  INFO  -||- [com.alibaba.nacos.client.naming] [main] => [REGISTER-SERVICE] test registering service TEST_GROUP@@chenfan-cloud-finance with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8092,"weight":1.0}
05-18  10:24:39.661  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [main] => nacos registry, TEST_GROUP chenfan-cloud-finance 10.228.84.57:8092 register finished
05-18  10:24:39.729  INFO  -||- [com.chenfan.finance.FinanceApplication] [main] => Started FinanceApplication in 13.309 seconds (JVM running for 14.668)
05-18  10:24:39.732  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] => ====================== init start =======================
05-18  10:24:39.747  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] =>  finance_project_key : 0e953785-4995-46a8-8282-82d500ceb711 
05-18  10:24:39.747  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] => ====================== init end =======================
05-18  10:24:39.750  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc-test.yaml+TEST_GROUP+test
05-18  10:24:39.751  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc-test.yaml, group=TEST_GROUP, cnt=1
05-18  10:24:39.751  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc.yaml+TEST_GROUP+test
05-18  10:24:39.751  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc.yaml, group=TEST_GROUP, cnt=1
05-18  10:24:39.751  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc+TEST_GROUP+test
05-18  10:24:39.751  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc, group=TEST_GROUP, cnt=1
05-18  10:24:39.754  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ======================================================================================
05-18  10:24:39.754  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] =>                                                                                       
05-18  10:24:39.754  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ................................服务启动成功,端口为8092................................
05-18  10:24:39.754  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ................................日志保存路径为: ./log/................................
05-18  10:24:39.754  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] =>                                                                                       
05-18  10:24:39.754  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ======================================================================================
05-18  10:24:39.759  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  10:24:40.089  INFO  -||- [org.mongodb.driver.cluster] [RMI TCP Connection(5)-10.228.84.57] => Cluster description not yet available. Waiting for 30000 ms before timing out
05-18  10:24:40.095  INFO  -||- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [RMI TCP Connection(7)-10.228.84.57] => Initializing Spring DispatcherServlet 'dispatcherServlet'
05-18  10:24:40.095  INFO  -||- [org.springframework.web.servlet.DispatcherServlet] [RMI TCP Connection(7)-10.228.84.57] => Initializing Servlet 'dispatcherServlet'
05-18  10:24:40.111  INFO  -||- [org.springframework.web.servlet.DispatcherServlet] [RMI TCP Connection(7)-10.228.84.57] => Completed initialization in 16 ms
05-18  10:25:09.461  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  10:25:10.099  WARN  -||- [org.springframework.boot.actuate.mongo.MongoHealthIndicator] [RMI TCP Connection(5)-10.228.84.57] => MongoDB health check failed
org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:90)
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:2902)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:560)
	at org.springframework.data.mongodb.core.MongoTemplate.executeCommand(MongoTemplate.java:476)
	at org.springframework.boot.actuate.mongo.MongoHealthIndicator.doHealthCheck(MongoHealthIndicator.java:46)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:38)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:108)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateHealth(HealthEndpointSupport.java:119)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:105)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:83)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:70)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:75)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:77)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:121)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:96)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.mongodb.internal.connection.BaseCluster.getDescription(BaseCluster.java:182)
	at com.mongodb.internal.connection.SingleServerCluster.getDescription(SingleServerCluster.java:41)
	at com.mongodb.client.internal.MongoClientDelegate.getConnectedClusterDescription(MongoClientDelegate.java:145)
	at com.mongodb.client.internal.MongoClientDelegate.createClientSession(MongoClientDelegate.java:100)
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.getClientSession(MongoClientDelegate.java:277)
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:181)
	at com.mongodb.client.internal.MongoDatabaseImpl.executeCommand(MongoDatabaseImpl.java:186)
	at com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:155)
	at com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:150)
	at org.springframework.data.mongodb.core.MongoTemplate.lambda$executeCommand$2(MongoTemplate.java:476)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:558)
	... 46 common frames omitted
05-18  10:25:19.678  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================\\                      
05-18  10:25:19.678  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          \\                     
05-18  10:25:19.679  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           \\                    
05-18  10:25:19.679  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestURI:        /tax/invoice/fields/balance
05-18  10:25:19.774  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestParams:     
05-18  10:25:19.774  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] => Total:             96ms
05-18  10:25:19.774  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           //                      
05-18  10:25:19.774  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          //                       
05-18  10:25:19.774  INFO  -|bQFJ3afgWHEoP2ev|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================//                        



05-18  10:25:21.903  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================\\                      
05-18  10:25:21.904  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          \\                     
05-18  10:25:21.905  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           \\                    
05-18  10:25:21.905  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestURI:        /tax/invoice/list
05-18  10:25:21.933  INFO  -|bQFJ3afgWHEoP2TI|- [com.chenfan.finance.controller.common.TaxInvoiceCommonController] [http-nio-8092-exec-2] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:25:22.049  DEBUG -|bQFJ3afgWHEoP2TI|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-2] => ==>  Preparing: SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
05-18  10:25:22.077  DEBUG -|bQFJ3afgWHEoP2TI|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-2] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:25:22.088  DEBUG -|bQFJ3afgWHEoP2TI|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-2] => <==      Total: 1
05-18  10:25:22.089  INFO  -|bQFJ3afgWHEoP2TI|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (1336971001799380993) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103)) <==   |   [time]: ==> 16 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:25:22.110  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestParams:     
05-18  10:25:22.110  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] => Total:             207ms
05-18  10:25:22.110  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           //                      
05-18  10:25:22.110  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          //                       
05-18  10:25:22.110  INFO  -|bQFJ3afgWHEoP2TI|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================//                        



05-18  10:25:26.656  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================\\                      
05-18  10:25:26.656  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          \\                     
05-18  10:25:26.657  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           \\                    
05-18  10:25:26.657  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestURI:        /tax/invoice/list
05-18  10:25:26.663  INFO  -|bQFJ3afgWHEoP2iw|- [com.chenfan.finance.controller.common.TaxInvoiceCommonController] [http-nio-8092-exec-3] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:25:26.671  DEBUG -|bQFJ3afgWHEoP2iw|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-3] => ==>  Preparing: SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
05-18  10:25:26.673  DEBUG -|bQFJ3afgWHEoP2iw|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-3] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:25:26.676  DEBUG -|bQFJ3afgWHEoP2iw|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-3] => <==      Total: 1
05-18  10:25:26.676  INFO  -|bQFJ3afgWHEoP2iw|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (1336971001799380993) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103)) <==   |   [time]: ==> 4 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:25:26.685  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestParams:     
05-18  10:25:26.686  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] => Total:             30ms
05-18  10:25:26.686  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           //                      
05-18  10:25:26.686  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          //                       
05-18  10:25:26.686  INFO  -|bQFJ3afgWHEoP2iw|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================//                        



05-18  10:25:33.908  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================\\                      
05-18  10:25:33.909  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          \\                     
05-18  10:25:33.909  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           \\                    
05-18  10:25:33.909  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestURI:        /bank_and_cash/getList
05-18  10:25:33.931  INFO  -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-5] => 进入方法>>实收付款列表查询...
05-18  10:25:33.932  INFO  -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-5] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:25:33.965  DEBUG -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-5] => ==>  Preparing: select bank_and_cash_id, record_seq_no, record_type, arap_type, job_type, DATE_FORMAT(arap_date, '%Y-%m-%d') arap_date, brand_id, bank_and_cash_status, balance, collection_unit, bank, bank_no, amount, balance_balance, check_date, clear_no, check_no, record_user, charges_remark, account_in_date, account_in_user, payment_branch, outgo_bank, outgo_bankno, outgo_confirm_user, remark, company_id, create_by, create_name, create_date, update_by, update_name, update_date, currency_code, balance_name , (case when bac.balance_balance = bac.amount then '未核销' when bac.balance_balance = 0 then '全部核销' when bac.balance_balance > 0 and bac.balance_balance < bac.amount then '部分核销' else '金额出错' END ) as clear_status from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.job_type in ( ? , ? ) AND bac.create_by in ( ? ) AND bac.brand_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) order by create_date desc limit ?, ?
05-18  10:25:33.976  DEBUG -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-5] => ==> Parameters: 1(Integer), 2(Integer), 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer), 0(Integer), 30(Integer)
05-18  10:25:33.981  DEBUG -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-5] => <==      Total: 0
05-18  10:25:33.981  INFO  -|bQFJ3afgWHEoP2Ex|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-5] =>     [sql]: ==> select * from cf_bank_and_cash bac where bac.bank_and_cash_status != 0 and bac.job_type in ( 1 , 2 ) and bac.create_by in ( 1336971001799380993 ) and bac.brand_id in ( 2 , 3 , 4 , 8 , 21 , 22 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 35 , 36 , 39 , 42 , 52 , 62 , 63 , 64 , 65 , 67 , 68 , 69 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 103 ) order by create_date desc limit 0, 30 <==   |   [time]: ==> 14 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  10:25:33.990  DEBUG -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-5] => ==>  Preparing: select count(*) from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.create_by in ( ? ) AND bac.brand_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
05-18  10:25:33.998  DEBUG -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-5] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:25:34.002  DEBUG -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-5] => <==      Total: 1
05-18  10:25:34.004  INFO  -|bQFJ3afgWHEoP2Ex|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-5] =>     [sql]: ==> select count(*) from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.create_by in ( 1336971001799380993 ) AND bac.brand_id in ( 2 , 3 , 4 , 8 , 21 , 22 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 35 , 36 , 39 , 42 , 52 , 62 , 63 , 64 , 65 , 67 , 68 , 69 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 103 ) <==   |   [time]: ==> 12 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:25:34.005  INFO  -|bQFJ3afgWHEoP2Ex|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-5] => 退出方法>>实收付款列表查询...
05-18  10:25:34.015  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestParams:     
05-18  10:25:34.015  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] => Total:             107ms
05-18  10:25:34.015  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           //                      
05-18  10:25:34.015  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          //                       
05-18  10:25:34.015  INFO  -|bQFJ3afgWHEoP2Ex|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================//                        



05-18  10:25:36.697  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] => ========================\\                      
05-18  10:25:36.698  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] =>                          \\                     
05-18  10:25:36.698  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] =>                           \\                    
05-18  10:25:36.698  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] => RequestURI:        /bank_and_cash/getList
05-18  10:25:36.704  INFO  -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-6] => 进入方法>>实收付款列表查询...
05-18  10:25:36.704  INFO  -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-6] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:25:36.709  DEBUG -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-6] => ==>  Preparing: select bank_and_cash_id, record_seq_no, record_type, arap_type, job_type, DATE_FORMAT(arap_date, '%Y-%m-%d') arap_date, brand_id, bank_and_cash_status, balance, collection_unit, bank, bank_no, amount, balance_balance, check_date, clear_no, check_no, record_user, charges_remark, account_in_date, account_in_user, payment_branch, outgo_bank, outgo_bankno, outgo_confirm_user, remark, company_id, create_by, create_name, create_date, update_by, update_name, update_date, currency_code, balance_name , (case when bac.balance_balance = bac.amount then '未核销' when bac.balance_balance = 0 then '全部核销' when bac.balance_balance > 0 and bac.balance_balance < bac.amount then '部分核销' else '金额出错' END ) as clear_status from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.job_type in ( ? , ? ) AND bac.create_by in ( ? ) AND bac.brand_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) order by create_date desc limit ?, ?
05-18  10:25:36.719  DEBUG -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-6] => ==> Parameters: 1(Integer), 2(Integer), 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer), 0(Integer), 30(Integer)
05-18  10:25:36.724  DEBUG -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-6] => <==      Total: 0
05-18  10:25:36.725  INFO  -|bQFJ3afgWHEoP2iG|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-6] =>     [sql]: ==> select * from cf_bank_and_cash bac where bac.bank_and_cash_status != 0 and bac.job_type in ( 1 , 2 ) and bac.create_by in ( 1336971001799380993 ) and bac.brand_id in ( 2 , 3 , 4 , 8 , 21 , 22 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 35 , 36 , 39 , 42 , 52 , 62 , 63 , 64 , 65 , 67 , 68 , 69 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 103 ) order by create_date desc limit 0, 30 <==   |   [time]: ==> 14 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  10:25:36.730  DEBUG -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-6] => ==>  Preparing: select count(*) from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.create_by in ( ? ) AND bac.brand_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
05-18  10:25:36.740  DEBUG -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-6] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:25:36.744  DEBUG -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-6] => <==      Total: 1
05-18  10:25:36.744  INFO  -|bQFJ3afgWHEoP2iG|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-6] =>     [sql]: ==> select count(*) from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.create_by in ( 1336971001799380993 ) AND bac.brand_id in ( 2 , 3 , 4 , 8 , 21 , 22 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 35 , 36 , 39 , 42 , 52 , 62 , 63 , 64 , 65 , 67 , 68 , 69 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 103 ) <==   |   [time]: ==> 12 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:25:36.745  INFO  -|bQFJ3afgWHEoP2iG|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-6] => 退出方法>>实收付款列表查询...
05-18  10:25:36.753  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] => RequestParams:     
05-18  10:25:36.753  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] => Total:             56ms
05-18  10:25:36.753  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] =>                           //                      
05-18  10:25:36.753  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] =>                          //                       
05-18  10:25:36.753  INFO  -|bQFJ3afgWHEoP2iG|- [HTTP_LOG] [http-nio-8092-exec-6] => ========================//                        



05-18  10:25:38.057  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================\\                      
05-18  10:25:38.058  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          \\                     
05-18  10:25:38.058  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           \\                    
05-18  10:25:38.058  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestURI:        /charge/common/balance
05-18  10:25:38.079  DEBUG -|bQFJ3afgWHEoP22W|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-7] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  10:25:38.081  DEBUG -|bQFJ3afgWHEoP22W|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-7] => ==> Parameters: 
05-18  10:25:38.087  DEBUG -|bQFJ3afgWHEoP22W|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-7] => <==      Total: 47
05-18  10:25:38.088  INFO  -|bQFJ3afgWHEoP22W|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-7] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  10:25:38.099  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestParams:     
05-18  10:25:38.099  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] => Total:             42ms
05-18  10:25:38.099  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           //                      
05-18  10:25:38.099  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          //                       
05-18  10:25:38.099  INFO  -|bQFJ3afgWHEoP22W|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================//                        



05-18  10:25:38.110  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================\\                      
05-18  10:25:38.110  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          \\                     
05-18  10:25:38.111  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           \\                    
05-18  10:25:38.111  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestURI:        /charge/common/balance
05-18  10:25:38.118  DEBUG -|bQFJ3afgWHEoP2TJ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-4] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  10:25:38.121  DEBUG -|bQFJ3afgWHEoP2TJ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-4] => ==> Parameters: 
05-18  10:25:38.126  DEBUG -|bQFJ3afgWHEoP2TJ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-4] => <==      Total: 47
05-18  10:25:38.127  INFO  -|bQFJ3afgWHEoP2TJ|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-4] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  10:25:38.136  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestParams:     
05-18  10:25:38.137  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] => Total:             27ms
05-18  10:25:38.137  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           //                      
05-18  10:25:38.137  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          //                       
05-18  10:25:38.137  INFO  -|bQFJ3afgWHEoP2TJ|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================//                        



05-18  10:25:38.151  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================\\                      
05-18  10:25:38.151  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          \\                     
05-18  10:25:38.152  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           \\                    
05-18  10:25:38.152  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestURI:        /charge/common/balance
05-18  10:25:38.160  DEBUG -|bQFJ3afgWHEoP27U|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-9] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  10:25:38.163  DEBUG -|bQFJ3afgWHEoP27U|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-9] => ==> Parameters: 
05-18  10:25:38.167  DEBUG -|bQFJ3afgWHEoP27U|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-9] => <==      Total: 47
05-18  10:25:38.168  INFO  -|bQFJ3afgWHEoP27U|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-9] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  10:25:38.176  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestParams:     
05-18  10:25:38.176  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] => Total:             25ms
05-18  10:25:38.176  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           //                      
05-18  10:25:38.176  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          //                       
05-18  10:25:38.177  INFO  -|bQFJ3afgWHEoP27U|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================//                        



05-18  10:25:38.965  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  10:25:39.466  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================\\                      
05-18  10:25:39.466  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          \\                     
05-18  10:25:39.466  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           \\                    
05-18  10:25:39.466  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestURI:        /cfClear/list
05-18  10:25:39.474  INFO  -|bQFJ3afgWHEoP2gR|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-10] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:25:39.495  INFO  -|bQFJ3afgWHEoP2gR|- [RPC_LOG] [http-nio-8092-exec-10] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  10:25:39.496  DEBUG -|bQFJ3afgWHEoP2gR|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-10] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  10:25:39.624  INFO  -|bQFJ3afgWHEoP2gR|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-10] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  10:25:39.639  INFO  -|bQFJ3afgWHEoP2gR|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-10] => Client: chenfan-cloud-privilege instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-privilege,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  10:25:39.646  INFO  -|bQFJ3afgWHEoP2gR|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-10] => Using serverListUpdater PollingServerListUpdater
05-18  10:25:39.655  INFO  -|bQFJ3afgWHEoP2gR|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-10] => new ips(1) service: TEST_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.21#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege","ip":"172.20.0.21","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  10:25:39.659  INFO  -|bQFJ3afgWHEoP2gR|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-10] => current ips:(1) service: TEST_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.21#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege","ip":"172.20.0.21","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  10:25:39.669  INFO  -|bQFJ3afgWHEoP2gR|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-10] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  10:25:39.670  INFO  -|bQFJ3afgWHEoP2gR|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-10] => DynamicServerListLoadBalancer for client chenfan-cloud-privilege initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-privilege,current list of Servers=[172.20.0.21:8099],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.20.0.21:8099;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@6df23f09
05-18  10:25:40.648  INFO  -|bQFJ3afgWHEoP2gR|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-0] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  10:25:53.999  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================\\                      
05-18  10:25:53.999  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          \\                     
05-18  10:25:53.999  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           \\                    
05-18  10:25:53.999  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestURI:        /bank_and_cash/getList
05-18  10:25:54.005  INFO  -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-1] => 进入方法>>实收付款列表查询...
05-18  10:25:54.006  INFO  -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-1] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:25:54.012  DEBUG -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-1] => ==>  Preparing: select bank_and_cash_id, record_seq_no, record_type, arap_type, job_type, DATE_FORMAT(arap_date, '%Y-%m-%d') arap_date, brand_id, bank_and_cash_status, balance, collection_unit, bank, bank_no, amount, balance_balance, check_date, clear_no, check_no, record_user, charges_remark, account_in_date, account_in_user, payment_branch, outgo_bank, outgo_bankno, outgo_confirm_user, remark, company_id, create_by, create_name, create_date, update_by, update_name, update_date, currency_code, balance_name , (case when bac.balance_balance = bac.amount then '未核销' when bac.balance_balance = 0 then '全部核销' when bac.balance_balance > 0 and bac.balance_balance < bac.amount then '部分核销' else '金额出错' END ) as clear_status from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.job_type in ( ? , ? ) AND bac.create_by in ( ? ) AND bac.brand_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) order by create_date desc limit ?, ?
05-18  10:25:54.021  DEBUG -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-1] => ==> Parameters: 1(Integer), 2(Integer), 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer), 30(Integer), 30(Integer)
05-18  10:25:54.026  DEBUG -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.dao.CfBankAndCashMapper.getList] [http-nio-8092-exec-1] => <==      Total: 0
05-18  10:25:54.027  INFO  -|bQFJ3afgWHEoP28g|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-1] =>     [sql]: ==> select * from cf_bank_and_cash bac where bac.bank_and_cash_status != 0 and bac.job_type in ( 1 , 2 ) and bac.create_by in ( 1336971001799380993 ) and bac.brand_id in ( 2 , 3 , 4 , 8 , 21 , 22 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 35 , 36 , 39 , 42 , 52 , 62 , 63 , 64 , 65 , 67 , 68 , 69 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 103 ) order by create_date desc limit 30, 30 <==   |   [time]: ==> 13 ms <==   |   [size]: ==> 0 <==   |   [result]: ==> []  <==
05-18  10:25:54.032  DEBUG -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-1] => ==>  Preparing: select count(*) from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.create_by in ( ? ) AND bac.brand_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
05-18  10:25:54.040  DEBUG -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-1] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:25:54.044  DEBUG -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.dao.CfBankAndCashMapper.count] [http-nio-8092-exec-1] => <==      Total: 1
05-18  10:25:54.044  INFO  -|bQFJ3afgWHEoP28g|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-1] =>     [sql]: ==> select count(*) from cf_bank_and_cash bac WHERE bac.bank_and_cash_status != 0 AND bac.create_by in ( 1336971001799380993 ) AND bac.brand_id in ( 2 , 3 , 4 , 8 , 21 , 22 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 35 , 36 , 39 , 42 , 52 , 62 , 63 , 64 , 65 , 67 , 68 , 69 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 103 ) <==   |   [time]: ==> 11 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:25:54.045  INFO  -|bQFJ3afgWHEoP28g|- [com.chenfan.finance.controller.CfBankAndCashController] [http-nio-8092-exec-1] => 退出方法>>实收付款列表查询...
05-18  10:25:54.052  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestParams:     
05-18  10:25:54.052  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] => Total:             53ms
05-18  10:25:54.052  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           //                      
05-18  10:25:54.052  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          //                       
05-18  10:25:54.052  INFO  -|bQFJ3afgWHEoP28g|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================//                        



05-18  10:26:00.773  DEBUG -|bQFJ3afgWHEoP2gR|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-10] => [PrivilegeUserServer#listUsers] <--- ERROR HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect (21276ms)
05-18  10:26:00.776  ERROR -|bQFJ3afgWHEoP2gR|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-10] => [[Exception, ERROR, Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers]] {}: {}
feign.RetryableException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy199.listUsers(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:729)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$86fa5023.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 71 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 108 common frames omitted
05-18  10:26:00.784  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestParams:     
05-18  10:26:00.784  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] => Total:             21318ms
05-18  10:26:00.784  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           //                      
05-18  10:26:00.784  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          //                       
05-18  10:26:00.784  INFO  -|bQFJ3afgWHEoP2gR|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================//                        



05-18  10:26:03.369  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================\\                      
05-18  10:26:03.369  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          \\                     
05-18  10:26:03.370  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           \\                    
05-18  10:26:03.370  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestURI:        /tax/invoice/list
05-18  10:26:03.375  INFO  -|bQFJ3afgWHEoP2cG|- [com.chenfan.finance.controller.common.TaxInvoiceCommonController] [http-nio-8092-exec-2] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:26:03.382  DEBUG -|bQFJ3afgWHEoP2cG|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-2] => ==>  Preparing: SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
05-18  10:26:03.385  DEBUG -|bQFJ3afgWHEoP2cG|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-2] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:26:03.387  DEBUG -|bQFJ3afgWHEoP2cG|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-2] => <==      Total: 1
05-18  10:26:03.387  INFO  -|bQFJ3afgWHEoP2cG|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (1336971001799380993) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103)) <==   |   [time]: ==> 4 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:26:03.399  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestParams:     
05-18  10:26:03.399  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] => Total:             30ms
05-18  10:26:03.399  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           //                      
05-18  10:26:03.400  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          //                       
05-18  10:26:03.400  INFO  -|bQFJ3afgWHEoP2cG|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================//                        



05-18  10:26:08.468  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  10:26:08.497  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================\\                      
05-18  10:26:08.497  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          \\                     
05-18  10:26:08.498  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           \\                    
05-18  10:26:08.498  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestURI:        /tax/invoice/list
05-18  10:26:08.505  INFO  -|bQFJ3afgWHEoP2O5|- [com.chenfan.finance.controller.common.TaxInvoiceCommonController] [http-nio-8092-exec-5] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:26:08.513  DEBUG -|bQFJ3afgWHEoP2O5|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-5] => ==>  Preparing: SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
05-18  10:26:08.516  DEBUG -|bQFJ3afgWHEoP2O5|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-5] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:26:08.519  DEBUG -|bQFJ3afgWHEoP2O5|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-5] => <==      Total: 1
05-18  10:26:08.520  INFO  -|bQFJ3afgWHEoP2O5|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-5] =>     [sql]: ==> SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (1336971001799380993) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103)) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:26:08.527  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestParams:     
05-18  10:26:08.527  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] => Total:             30ms
05-18  10:26:08.527  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           //                      
05-18  10:26:08.527  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          //                       
05-18  10:26:08.527  INFO  -|bQFJ3afgWHEoP2O5|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================//                        



05-18  10:26:37.971  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  10:26:40.871  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================\\                      
05-18  10:26:40.871  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          \\                     
05-18  10:26:40.871  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           \\                    
05-18  10:26:40.871  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestURI:        /tax/invoice/list
05-18  10:26:40.877  INFO  -|bQFJ3afgWHEoP2l2|- [com.chenfan.finance.controller.common.TaxInvoiceCommonController] [http-nio-8092-exec-7] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:26:54.328  DEBUG -|bQFJ3afgWHEoP2l2|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-7] => ==>  Preparing: SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
05-18  10:26:54.410  DEBUG -|bQFJ3afgWHEoP2l2|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-7] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:26:54.414  DEBUG -|bQFJ3afgWHEoP2l2|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-7] => <==      Total: 1
05-18  10:26:54.419  INFO  -|bQFJ3afgWHEoP2l2|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-7] =>     [sql]: ==> SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (1336971001799380993) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103)) <==   |   [time]: ==> 79 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:27:08.452  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  10:27:08.460  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestParams:     
05-18  10:27:08.461  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] => Total:             27591ms
05-18  10:27:08.461  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           //                      
05-18  10:27:08.461  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          //                       
05-18  10:27:08.461  INFO  -|bQFJ3afgWHEoP2l2|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================//                        



05-18  10:27:15.815  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================\\                      
05-18  10:27:15.815  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          \\                     
05-18  10:27:15.816  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           \\                    
05-18  10:27:15.816  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestURI:        /tax/invoice/list
05-18  10:27:15.822  INFO  -|bQFJ3afgWHEoP2bd|- [com.chenfan.finance.controller.common.TaxInvoiceCommonController] [http-nio-8092-exec-9] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  10:27:56.609  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  10:27:59.186  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.beat.sender] => [REGISTER-SERVICE] test registering service TEST_GROUP@@chenfan-cloud-finance with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8092,"serviceName":"TEST_GROUP@@chenfan-cloud-finance","weight":1.0}
05-18  10:27:59.195  DEBUG -|bQFJ3afgWHEoP2bd|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-9] => ==>  Preparing: SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
05-18  10:27:59.198  DEBUG -|bQFJ3afgWHEoP2bd|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-9] => ==> Parameters: 1336971001799380993(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 30(Integer), 31(Integer), 32(Integer), 35(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 95(Integer), 96(Integer), 97(Integer), 98(Integer), 99(Integer), 100(Integer), 101(Integer), 103(Integer)
05-18  10:27:59.199  DEBUG -|bQFJ3afgWHEoP2bd|- [com.chenfan.finance.dao.CfTaxInvoiceHeaderMapper.selectList_COUNT] [http-nio-8092-exec-9] => <==      Total: 1
05-18  10:27:59.200  INFO  -|bQFJ3afgWHEoP2bd|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-9] =>     [sql]: ==> SELECT count(0) FROM cf_tax_invoice_header WHERE (create_by IN (1336971001799380993) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103)) <==   |   [time]: ==> 4 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  10:27:59.207  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestParams:     
05-18  10:27:59.207  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] => Total:             43392ms
05-18  10:27:59.207  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           //                      
05-18  10:27:59.207  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          //                       
05-18  10:27:59.207  INFO  -|bQFJ3afgWHEoP2bd|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================//                        



05-18  10:28:01.284  INFO  -|bQFJ3afgWHEoP2gR|- [com.netflix.loadbalancer.PollingServerListUpdater] [Thread-106] => Shutting down the Executor Pool for PollingServerListUpdater
05-18  10:28:01.291  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [SpringContextShutdownHook] => Shutting down ExecutorService 'sheduleClearMemory'
05-18  10:28:01.294  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [SpringContextShutdownHook] => De-registering from Nacos Server now...
05-18  10:28:01.294  INFO  -||- [com.alibaba.nacos.client.naming] [SpringContextShutdownHook] => [BEAT] removing beat: TEST_GROUP@@chenfan-cloud-finance:10.228.84.57:8092 from beat map.
05-18  10:28:01.294  INFO  -||- [com.alibaba.nacos.client.naming] [SpringContextShutdownHook] => [DEREGISTER-SERVICE] test deregistering service TEST_GROUP@@chenfan-cloud-finance with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{},"port":8092,"weight":1.0}
05-18  10:28:01.297  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [SpringContextShutdownHook] => De-registration finished.
05-18  10:28:01.299  INFO  -||- [com.xxl.job.core.server.EmbedServer] [Thread-81] => >>>>>>>>>>> xxl-job remoting server stop.
05-18  10:28:01.307  INFO  -||- [com.xxl.job.core.thread.ExecutorRegistryThread] [xxl-job, executor ExecutorRegistryThread] => >>>>>>>>>>> xxl-job registry-remove success, registryParam:RegistryParam{registryGroup='EXECUTOR', registryKey='chenfan-finance', registryValue='http://10.228.84.57:9999/'}, registryResult:ReturnT [code=200, msg=null, content=null]
05-18  10:28:01.307  INFO  -||- [com.xxl.job.core.thread.ExecutorRegistryThread] [xxl-job, executor ExecutorRegistryThread] => >>>>>>>>>>> xxl-job, executor registry thread destory.
05-18  10:28:01.307  INFO  -||- [com.xxl.job.core.server.EmbedServer] [SpringContextShutdownHook] => >>>>>>>>>>> xxl-job remoting server destroy success.
05-18  10:28:01.308  INFO  -||- [com.xxl.job.core.thread.TriggerCallbackThread] [xxl-job, executor TriggerCallbackThread] => >>>>>>>>>>> xxl-job, executor callback thread destory.
05-18  10:28:01.308  INFO  -||- [com.xxl.job.core.thread.TriggerCallbackThread] [Thread-80] => >>>>>>>>>>> xxl-job, executor retry callback thread destory.
05-18  10:28:01.308  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [SpringContextShutdownHook] => Shutting down ExecutorService 'sheduleClearMemory'
05-18  10:28:01.322  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:9876] result: true
05-18  10:28:01.322  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10909] result: true
05-18  10:28:01.322  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10911] result: true
05-18  10:28:01.328  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:9876] result: true
05-18  10:28:01.328  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10909] result: true
05-18  10:28:01.328  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10911] result: true
05-18  10:28:01.334  INFO  -||- [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [SpringContextShutdownHook] => Closing JPA EntityManagerFactory for persistence unit 'default'
05-18  10:28:01.336  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [SpringContextShutdownHook] => {dataSource-1} closing ...
05-18  10:28:01.341  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [SpringContextShutdownHook] => {dataSource-1} closed
