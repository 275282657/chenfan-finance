05-18  14:20:33.258  INFO  -||- [com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor] [main] => LOCAL_SNAPSHOT_PATH:C:\Users\2797\nacos\config
05-18  14:20:33.283  INFO  -||- [com.alibaba.nacos.client.config.impl.Limiter] [main] => limitTime:5.0
05-18  14:20:33.298  WARN  -||- [com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder] [main] => Ignore the empty nacos configuration and get it based on dataId[cc] & group[TEST_GROUP]
05-18  14:20:33.301  WARN  -||- [com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder] [main] => Ignore the empty nacos configuration and get it based on dataId[cc.yaml] & group[TEST_GROUP]
05-18  14:20:33.303  INFO  -||- [com.alibaba.nacos.client.config.utils.JVMUtil] [main] => isMultiInstance:false
05-18  14:20:33.311  INFO  -||- [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration] [main] => Located property source: [BootstrapPropertySource {name='bootstrapProperties-cc-test.yaml,TEST_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-cc.yaml,TEST_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-cc,TEST_GROUP'}]
05-18  14:20:33.380  INFO  -||- [com.chenfan.finance.FinanceApplication] [main] => The following profiles are active: test
05-18  14:20:34.738  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
05-18  14:20:34.741  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
05-18  14:20:34.997  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  14:20:34.997  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data JPA repositories in DEFAULT mode.
05-18  14:20:35.038  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 34ms. Found 0 JPA repository interfaces.
05-18  14:20:35.044  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  14:20:35.044  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
05-18  14:20:35.062  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 18ms. Found 0 MongoDB repository interfaces.
05-18  14:20:35.071  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Multiple Spring Data modules found, entering strict repository configuration mode!
05-18  14:20:35.072  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Bootstrapping Spring Data Redis repositories in DEFAULT mode.
05-18  14:20:35.098  INFO  -||- [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] => Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
05-18  14:20:35.162  WARN  -||- [org.springframework.boot.actuate.endpoint.EndpointId] [main] => Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
05-18  14:20:35.299  INFO  -||- [org.springframework.context.annotation.ConfigurationClassPostProcessor] [main] => Cannot enhance @Configuration bean definition 'com.chenfan.ccp.autoconfigure.GlobalMqMessageConfigure' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
05-18  14:20:35.381  INFO  -||- [org.springframework.cloud.context.scope.GenericScope] [main] => BeanFactory id=a99f0510-61d8-31da-b49e-dee2168a9b76
05-18  14:20:35.422  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.BaseInfoRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.423  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.BaseRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.424  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.McnRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.425  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.PrivilegeUserServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.426  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.PurchaseRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.427  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.TaskRemoteServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.428  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.finance.server.VendorCenterServer' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.430  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.process.client.ProcessClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:35.442  INFO  -||- [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] => Bean 'com.chenfan.code.generate.CodeGenerateClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
05-18  14:20:36.029  INFO  -||- [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] => Tomcat initialized with port(s): 8092 (http)
05-18  14:20:36.038  INFO  -||- [org.apache.catalina.core.StandardService] [main] => Starting service [Tomcat]
05-18  14:20:36.038  INFO  -||- [org.apache.catalina.core.StandardEngine] [main] => Starting Servlet engine: [Apache Tomcat/9.0.37]
05-18  14:20:36.171  INFO  -||- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [main] => Initializing Spring embedded WebApplicationContext
05-18  14:20:36.171  INFO  -||- [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] => Root WebApplicationContext: initialization completed in 2754 ms
05-18  14:20:36.588  INFO  -||- [org.redisson.Version] [main] => Redisson 3.14.0
05-18  14:20:37.002  INFO  -||- [org.redisson.connection.pool.MasterPubSubConnectionPool] [redisson-netty-2-17] => 1 connections initialized for /10.228.81.233:6379
05-18  14:20:37.020  INFO  -||- [org.redisson.connection.pool.MasterConnectionPool] [redisson-netty-2-19] => 24 connections initialized for /10.228.81.233:6379
05-18  14:20:37.717  INFO  -||- [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure] [main] => Init DruidDataSource
05-18  14:20:37.848  WARN  -||- [com.alibaba.druid.pool.DruidDataSource] [main] => removeAbandoned is true, not use in production.
05-18  14:20:37.968  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [main] => {dataSource-1} inited
05-18  14:20:38.121  INFO  -||- [org.hibernate.jpa.internal.util.LogHelper] [main] => HHH000204: Processing PersistenceUnitInfo [name: default]
05-18  14:20:38.167  INFO  -||- [org.hibernate.Version] [main] => HHH000412: Hibernate ORM core version 5.4.18.Final
05-18  14:20:38.287  INFO  -||- [org.hibernate.annotations.common.Version] [main] => HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
05-18  14:20:38.402  INFO  -||- [org.hibernate.dialect.Dialect] [main] => HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
05-18  14:20:38.575  INFO  -||- [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] => HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
05-18  14:20:38.585  INFO  -||- [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] => Initialized JPA EntityManagerFactory for persistence unit 'default'
05-18  14:20:39.043  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.CfBankAndCashMapper.delete] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Delete]
05-18  14:20:39.617  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingDetailMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
05-18  14:20:39.621  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingDetailMapper.updateById] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.UpdateById]
05-18  14:20:39.636  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingHeaderMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
05-18  14:20:39.641  WARN  -||- [com.baomidou.mybatisplus.core.injector.AbstractMethod] [main] => [com.chenfan.finance.dao.RuleBillingHeaderMapper.selectById] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.SelectById]
05-18  14:20:39.873  WARN  -||- [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] => spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
05-18  14:20:41.963  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Property :null
05-18  14:20:41.964  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Environment :null
05-18  14:20:41.965  INFO  -||- [com.alibaba.nacos.client.naming] [main] => initializer namespace from System Property :null
05-18  14:20:42.072  INFO  -||- [org.mongodb.driver.cluster] [main] => Cluster created with settings {hosts=[10.228.86.202:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
05-18  14:20:42.499  INFO  -||- [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] => Exposing 1 endpoint(s) beneath base path '/actuator'
05-18  14:20:42.680  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [main] => Initializing ExecutorService 'sheduleClearMemory'
05-18  14:20:42.689  INFO  -||- [com.chenfan.finance.config.XxlJobConfig] [main] => >>>>>>>>>>> xxl-job config init.
05-18  14:20:42.744  WARN  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => No URLs will be polled as dynamic configuration sources.
05-18  14:20:42.745  INFO  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
05-18  14:20:42.749  WARN  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => No URLs will be polled as dynamic configuration sources.
05-18  14:20:42.749  INFO  -||- [com.netflix.config.sources.URLConfigurationSource] [main] => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
05-18  14:20:43.116  INFO  -||- [org.mongodb.driver.cluster] [cluster-ClusterId{value='60a35cba3ef284465ea79b9a', description='null'}-10.228.86.202:27017] => Exception in monitor thread while connecting to server 10.228.86.202:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:128)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
05-18  14:20:43.773  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:qcTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@7f57925d[class com.chenfan.finance.job.FinanceJob#qcTaskJob]
05-18  14:20:43.774  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:monitoringTask, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@5c3fb4e6[class com.chenfan.finance.job.FinanceJob#monitoringTask]
05-18  14:20:43.774  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:cfRdCalculateTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@3a3e0f7a[class com.chenfan.finance.job.FinanceJob#cfRdCalculateTaskJob]
05-18  14:20:43.774  INFO  -||- [com.xxl.job.core.executor.XxlJobExecutor] [main] => >>>>>>>>>>> xxl-job register jobhandler success, name:cfWdtRdCalculateTaskJob, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@2a4cf2d1[class com.chenfan.finance.job.FinanceJob#cfWdtRdCalculateTaskJob]
05-18  14:20:43.975  INFO  -||- [com.xxl.job.core.server.EmbedServer] [Thread-81] => >>>>>>>>>>> xxl-job remoting server start success, nettype = class com.xxl.job.core.server.EmbedServer, port = 9999
05-18  14:20:46.101  INFO  -||- [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] => Tomcat started on port(s): 8092 (http) with context path ''
05-18  14:20:46.113  INFO  -||- [com.alibaba.nacos.client.naming] [main] => [BEAT] adding beat: {"cluster":"DEFAULT","ip":"10.228.84.57","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8092,"scheduled":false,"serviceName":"TEST_GROUP@@chenfan-cloud-finance","stopped":false,"weight":1.0} to beat map.
05-18  14:20:46.149  INFO  -||- [com.alibaba.nacos.client.naming] [main] => [REGISTER-SERVICE] test registering service TEST_GROUP@@chenfan-cloud-finance with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8092,"weight":1.0}
05-18  14:20:46.191  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [main] => nacos registry, TEST_GROUP chenfan-cloud-finance 10.228.84.57:8092 register finished
05-18  14:20:46.345  INFO  -||- [com.chenfan.finance.FinanceApplication] [main] => Started FinanceApplication in 14.149 seconds (JVM running for 15.581)
05-18  14:20:46.353  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] => ====================== init start =======================
05-18  14:20:46.378  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] =>  finance_project_key : e61125ec-afc8-4ad2-9001-7ea663f92593 
05-18  14:20:46.378  INFO  -||- [com.chenfan.finance.commons.base.FinanceProjectInitRunner] [main] => ====================== init end =======================
05-18  14:20:46.386  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc-test.yaml+TEST_GROUP+test
05-18  14:20:46.390  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc-test.yaml, group=TEST_GROUP, cnt=1
05-18  14:20:46.391  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc.yaml+TEST_GROUP+test
05-18  14:20:46.391  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc.yaml, group=TEST_GROUP, cnt=1
05-18  14:20:46.391  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [main] => [fixed-10.228.81.30_3848-test] [subscribe] cc+TEST_GROUP+test
05-18  14:20:46.391  INFO  -||- [com.alibaba.nacos.client.config.impl.CacheData] [main] => [fixed-10.228.81.30_3848-test] [add-listener] ok, tenant=test, dataId=cc, group=TEST_GROUP, cnt=1
05-18  14:20:46.395  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ======================================================================================
05-18  14:20:46.395  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] =>                                                                                       
05-18  14:20:46.396  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ................................服务启动成功,端口为8092................................
05-18  14:20:46.396  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ................................日志保存路径为: ./log/................................
05-18  14:20:46.396  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] =>                                                                                       
05-18  14:20:46.396  INFO  -||- [com.chenfan.ccp.util.start.ApplicationContextUtil] [main] => ======================================================================================
05-18  14:20:46.400  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:20:46.790  INFO  -||- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [RMI TCP Connection(8)-10.228.84.57] => Initializing Spring DispatcherServlet 'dispatcherServlet'
05-18  14:20:46.791  INFO  -||- [org.springframework.web.servlet.DispatcherServlet] [RMI TCP Connection(8)-10.228.84.57] => Initializing Servlet 'dispatcherServlet'
05-18  14:20:46.815  INFO  -||- [org.springframework.web.servlet.DispatcherServlet] [RMI TCP Connection(8)-10.228.84.57] => Completed initialization in 24 ms
05-18  14:20:46.853  INFO  -||- [org.mongodb.driver.cluster] [RMI TCP Connection(7)-10.228.84.57] => Cluster description not yet available. Waiting for 30000 ms before timing out
05-18  14:21:10.039  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================\\                      
05-18  14:21:10.039  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          \\                     
05-18  14:21:10.040  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           \\                    
05-18  14:21:10.040  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestURI:        /cfClear/list
05-18  14:21:10.133  INFO  -|bQFJ3afgWHEoP27m|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-1] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  14:21:10.167  INFO  -|bQFJ3afgWHEoP27m|- [RPC_LOG] [http-nio-8092-exec-1] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:21:10.168  DEBUG -|bQFJ3afgWHEoP27m|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-1] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:21:10.291  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-1] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:21:10.307  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-1] => Client: chenfan-cloud-privilege instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-privilege,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  14:21:10.313  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-1] => Using serverListUpdater PollingServerListUpdater
05-18  14:21:10.323  INFO  -|bQFJ3afgWHEoP27m|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-1] => new ips(1) service: TEST_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.21#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege","ip":"172.20.0.21","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  14:21:10.327  INFO  -|bQFJ3afgWHEoP27m|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-1] => current ips:(1) service: TEST_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.21#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege","ip":"172.20.0.21","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  14:21:10.337  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-1] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:21:10.338  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-1] => DynamicServerListLoadBalancer for client chenfan-cloud-privilege initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-privilege,current list of Servers=[172.20.0.21:8099],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.20.0.21:8099;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@5860a3a
05-18  14:21:11.317  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-0] => Flipping property: chenfan-cloud-privilege.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:21:12.292  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================\\                      
05-18  14:21:12.293  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          \\                     
05-18  14:21:12.293  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           \\                    
05-18  14:21:12.293  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestURI:        /cfClear/list
05-18  14:21:12.305  INFO  -|bQFJ3afgWHEoP2mP|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-2] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  14:21:12.306  INFO  -|bQFJ3afgWHEoP2mP|- [RPC_LOG] [http-nio-8092-exec-2] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:21:12.306  DEBUG -|bQFJ3afgWHEoP2mP|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-2] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:21:16.099  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:21:16.855  WARN  -||- [org.springframework.boot.actuate.mongo.MongoHealthIndicator] [RMI TCP Connection(7)-10.228.84.57] => MongoDB health check failed
org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:90)
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:2902)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:560)
	at org.springframework.data.mongodb.core.MongoTemplate.executeCommand(MongoTemplate.java:476)
	at org.springframework.boot.actuate.mongo.MongoHealthIndicator.doHealthCheck(MongoHealthIndicator.java:46)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:38)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:108)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateHealth(HealthEndpointSupport.java:119)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:105)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:83)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:70)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:75)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:77)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:121)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:96)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.228.86.202:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.mongodb.internal.connection.BaseCluster.getDescription(BaseCluster.java:182)
	at com.mongodb.internal.connection.SingleServerCluster.getDescription(SingleServerCluster.java:41)
	at com.mongodb.client.internal.MongoClientDelegate.getConnectedClusterDescription(MongoClientDelegate.java:145)
	at com.mongodb.client.internal.MongoClientDelegate.createClientSession(MongoClientDelegate.java:100)
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.getClientSession(MongoClientDelegate.java:277)
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:181)
	at com.mongodb.client.internal.MongoDatabaseImpl.executeCommand(MongoDatabaseImpl.java:186)
	at com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:155)
	at com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:150)
	at org.springframework.data.mongodb.core.MongoTemplate.lambda$executeCommand$2(MongoTemplate.java:476)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:558)
	... 46 common frames omitted
05-18  14:21:31.435  DEBUG -|bQFJ3afgWHEoP27m|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-1] => [PrivilegeUserServer#listUsers] <--- ERROR HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect (21268ms)
05-18  14:21:31.438  ERROR -|bQFJ3afgWHEoP27m|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-1] => [[Exception, ERROR, Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers]] {}: {}
feign.RetryableException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy199.listUsers(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:729)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 71 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 108 common frames omitted
05-18  14:21:31.468  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestParams:     
05-18  14:21:31.468  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] => Total:             21429ms
05-18  14:21:31.468  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           //                      
05-18  14:21:31.468  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          //                       
05-18  14:21:31.468  INFO  -|bQFJ3afgWHEoP27m|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================//                        



05-18  14:21:33.318  DEBUG -|bQFJ3afgWHEoP2mP|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-2] => [PrivilegeUserServer#listUsers] <--- ERROR HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect (21014ms)
05-18  14:21:33.319  ERROR -|bQFJ3afgWHEoP2mP|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-2] => [[Exception, ERROR, Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers]] {}: {}
feign.RetryableException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy199.listUsers(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:729)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 71 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 108 common frames omitted
05-18  14:21:33.328  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestParams:     
05-18  14:21:33.328  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] => Total:             21036ms
05-18  14:21:33.328  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           //                      
05-18  14:21:33.328  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          //                       
05-18  14:21:33.329  INFO  -|bQFJ3afgWHEoP2mP|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================//                        



05-18  14:21:42.978  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================\\                      
05-18  14:21:42.978  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          \\                     
05-18  14:21:42.979  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           \\                    
05-18  14:21:42.979  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestURI:        /cfClear/list
05-18  14:21:42.984  INFO  -|bQFJ3afgWHEoP2bS|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-5] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  14:21:42.985  INFO  -|bQFJ3afgWHEoP2bS|- [RPC_LOG] [http-nio-8092-exec-5] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:21:42.985  DEBUG -|bQFJ3afgWHEoP2bS|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-5] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:21:45.600  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:22:03.991  DEBUG -|bQFJ3afgWHEoP2bS|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-5] => [PrivilegeUserServer#listUsers] <--- ERROR HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect (21006ms)
05-18  14:22:03.992  ERROR -|bQFJ3afgWHEoP2bS|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-5] => [[Exception, ERROR, Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers]] {}: {}
feign.RetryableException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy199.listUsers(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:729)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 71 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 108 common frames omitted
05-18  14:22:04.005  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestParams:     
05-18  14:22:04.006  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] => Total:             21028ms
05-18  14:22:04.006  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           //                      
05-18  14:22:04.006  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          //                       
05-18  14:22:04.006  INFO  -|bQFJ3afgWHEoP2bS|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================//                        



05-18  14:22:15.100  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:22:38.963  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================\\                      
05-18  14:22:38.963  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          \\                     
05-18  14:22:38.964  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           \\                    
05-18  14:22:38.964  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestURI:        /invoice/invoiceDetail/1406
05-18  14:22:39.011  DEBUG -|MvyIBzgQUvMyNjEb|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-7] => ==>  Preparing: SELECT invoice_id,invoice_no,invoice_status,customer_invoice_status,customer_invoice_way,invoice_type,job_type,contract_url,finance_entity,brand_id,balance,balance_name,invoice_title,invoice_title_name,bank,bank_accounts,invoice_currency_code,invoice_exchange_rate,invoicel_debit,invoicel_credit,arap_date,invoice_date,invoice_by,remark,create_by,create_date,create_name,update_by,update_date,u8_state,update_name,company_id,tenant_id,clear_status,clear_amount,adjust_delay_money,adjust_qc_money,adjust_red_money,adjust_tax_money,adjust_other_money,adjust_real_money,date_start,date_end,reviewer,reviewer_date,advance_pay_money,account_id,account_name,account_type,flow_id,settle_create_date,settle_title,settle_description,settle_template FROM cf_invoice_header WHERE invoice_id=?
05-18  14:22:39.053  DEBUG -|MvyIBzgQUvMyNjEb|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-7] => ==> Parameters: 1406(Long)
05-18  14:22:39.070  DEBUG -|MvyIBzgQUvMyNjEb|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-7] => <==      Total: 1
05-18  14:22:39.072  INFO  -|MvyIBzgQUvMyNjEb|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-7] =>     [sql]: ==> select * from cf_invoice_header where invoice_id=1406  <==   |   [time]: ==> 33 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceHeader(inv ...  <==
05-18  14:22:39.083  INFO  -|MvyIBzgQUvMyNjEb|- [RPC_LOG] [http-nio-8092-exec-7] => 开始请求服务=chenfan-cloud-baseinfo,URI=/api/brand/getBrandInfo/8
05-18  14:22:39.083  DEBUG -|MvyIBzgQUvMyNjEb|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-7] => [BaseInfoRemoteServer#getBrandInfo] ---> GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8 HTTP/1.1
05-18  14:22:39.120  INFO  -|MvyIBzgQUvMyNjEb|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-7] => Flipping property: chenfan-cloud-baseinfo.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:22:39.121  INFO  -|MvyIBzgQUvMyNjEb|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-7] => Client: chenfan-cloud-baseinfo instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-baseinfo,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  14:22:39.122  INFO  -|MvyIBzgQUvMyNjEb|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-7] => Using serverListUpdater PollingServerListUpdater
05-18  14:22:39.125  INFO  -|MvyIBzgQUvMyNjEb|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-7] => new ips(1) service: TEST_GROUP@@chenfan-cloud-baseinfo -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.4#8102#DEFAULT#TEST_GROUP@@chenfan-cloud-baseinfo","ip":"172.20.0.4","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8102,"serviceName":"TEST_GROUP@@chenfan-cloud-baseinfo","weight":1.0}]
05-18  14:22:39.126  INFO  -|MvyIBzgQUvMyNjEb|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-7] => current ips:(1) service: TEST_GROUP@@chenfan-cloud-baseinfo -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.4#8102#DEFAULT#TEST_GROUP@@chenfan-cloud-baseinfo","ip":"172.20.0.4","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8102,"serviceName":"TEST_GROUP@@chenfan-cloud-baseinfo","weight":1.0}]
05-18  14:22:39.128  INFO  -|MvyIBzgQUvMyNjEb|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-7] => Flipping property: chenfan-cloud-baseinfo.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:22:39.129  INFO  -|MvyIBzgQUvMyNjEb|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-7] => DynamicServerListLoadBalancer for client chenfan-cloud-baseinfo initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-baseinfo,current list of Servers=[172.20.0.4:8102],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.20.0.4:8102;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@7e155ef9
05-18  14:22:40.123  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-0] => Flipping property: chenfan-cloud-baseinfo.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:22:44.602  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:22:51.374  INFO  -|bQFJ3afgWHEoP27m|- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.client.naming.updater] => new ips(1) service: TEST_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  14:22:51.374  INFO  -|bQFJ3afgWHEoP27m|- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.client.naming.updater] => current ips:(2) service: TEST_GROUP@@chenfan-cloud-privilege -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-privilege","weight":1.0},{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.21#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege","ip":"172.20.0.21","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-privilege","weight":1.0}]
05-18  14:22:51.582  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"10.228.84.57\",\"port\":8099,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"10.228.84.57#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-privilege\",\"ephemeral\":true},{\"ip\":\"172.20.0.21\",\"port\":8099,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.20.0.21#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-privilege\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-privilege\",\"ephemeral\":true}],\"dom\":\"TEST_GROUP@@chenfan-cloud-privilege\",\"name\":\"TEST_GROUP@@chenfan-cloud-privilege\",\"cacheMillis\":10000,\"lastRefTime\":1621319035872,\"checksum\":\"f01f57d33fbc0d4ff3338f8e84912f0f\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":7699559288435841} from /10.228.81.30
05-18  14:23:00.138  DEBUG -|MvyIBzgQUvMyNjEb|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-7] => [BaseInfoRemoteServer#getBrandInfo] <--- ERROR HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect (21055ms)
05-18  14:23:00.140  ERROR -|MvyIBzgQUvMyNjEb|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-7] => [[Exception, ERROR, Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8]] {}: {}
feign.RetryableException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy195.getBrandInfo(Unknown Source)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl.detail(CfInvoiceHeaderServiceImpl.java:438)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl$$FastClassBySpringCGLIB$$d0edf809.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl$$EnhancerBySpringCGLIB$$6ca18cf1.detail(<generated>)
	at com.chenfan.finance.controller.CfInvoiceHeaderController.invoiceDetail(CfInvoiceHeaderController.java:181)
	at com.chenfan.finance.controller.CfInvoiceHeaderController$$FastClassBySpringCGLIB$$9678e62b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.chenfan.finance.controller.CfInvoiceHeaderController$$EnhancerBySpringCGLIB$$74529d92.invoiceDetail(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 81 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 118 common frames omitted
05-18  14:23:00.149  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestParams:     
05-18  14:23:00.149  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] => Total:             21186ms
05-18  14:23:00.149  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           //                      
05-18  14:23:00.149  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          //                       
05-18  14:23:00.149  INFO  -|MvyIBzgQUvMyNjEb|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================//                        



05-18  14:23:00.542  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] => ========================\\                      
05-18  14:23:00.543  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] =>                          \\                     
05-18  14:23:00.543  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] =>                           \\                    
05-18  14:23:00.545  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] => RequestURI:        /charge/common/balance
05-18  14:23:00.613  DEBUG -|MbY7BzfgWHX2a1cL|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-8] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  14:23:00.615  DEBUG -|MbY7BzfgWHX2a1cL|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-8] => ==> Parameters: 
05-18  14:23:00.621  DEBUG -|MbY7BzfgWHX2a1cL|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-8] => <==      Total: 47
05-18  14:23:00.622  INFO  -|MbY7BzfgWHX2a1cL|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-8] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 8 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  14:23:00.626  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] => RequestParams:     
05-18  14:23:00.626  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] => Total:             84ms
05-18  14:23:00.626  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] =>                           //                      
05-18  14:23:00.626  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] =>                          //                       
05-18  14:23:00.627  INFO  -|MbY7BzfgWHX2a1cL|- [HTTP_LOG] [http-nio-8092-exec-8] => ========================//                        



05-18  14:23:00.687  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================\\                      
05-18  14:23:00.687  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          \\                     
05-18  14:23:00.688  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           \\                    
05-18  14:23:00.688  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestURI:        /invoice/invoiceDetail/1406
05-18  14:23:00.695  DEBUG -|MvyIBzgQUvMyNj0U|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-9] => ==>  Preparing: SELECT invoice_id,invoice_no,invoice_status,customer_invoice_status,customer_invoice_way,invoice_type,job_type,contract_url,finance_entity,brand_id,balance,balance_name,invoice_title,invoice_title_name,bank,bank_accounts,invoice_currency_code,invoice_exchange_rate,invoicel_debit,invoicel_credit,arap_date,invoice_date,invoice_by,remark,create_by,create_date,create_name,update_by,update_date,u8_state,update_name,company_id,tenant_id,clear_status,clear_amount,adjust_delay_money,adjust_qc_money,adjust_red_money,adjust_tax_money,adjust_other_money,adjust_real_money,date_start,date_end,reviewer,reviewer_date,advance_pay_money,account_id,account_name,account_type,flow_id,settle_create_date,settle_title,settle_description,settle_template FROM cf_invoice_header WHERE invoice_id=?
05-18  14:23:00.705  DEBUG -|MvyIBzgQUvMyNj0U|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-9] => ==> Parameters: 1406(Long)
05-18  14:23:00.709  DEBUG -|MvyIBzgQUvMyNj0U|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-9] => <==      Total: 1
05-18  14:23:00.709  INFO  -|MvyIBzgQUvMyNj0U|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-9] =>     [sql]: ==> select * from cf_invoice_header where invoice_id=1406  <==   |   [time]: ==> 13 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceHeader(inv ...  <==
05-18  14:23:00.716  INFO  -|MvyIBzgQUvMyNj0U|- [RPC_LOG] [http-nio-8092-exec-9] => 开始请求服务=chenfan-cloud-baseinfo,URI=/api/brand/getBrandInfo/8
05-18  14:23:00.717  DEBUG -|MvyIBzgQUvMyNj0U|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-9] => [BaseInfoRemoteServer#getBrandInfo] ---> GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8 HTTP/1.1
05-18  14:23:07.375  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================\\                      
05-18  14:23:07.376  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          \\                     
05-18  14:23:07.378  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           \\                    
05-18  14:23:07.378  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestURI:        /charge/common/balance
05-18  14:23:07.399  DEBUG -|MbY7BzfgWHX2a11y|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-10] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  14:23:07.406  DEBUG -|MbY7BzfgWHX2a11y|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-10] => ==> Parameters: 
05-18  14:23:07.413  DEBUG -|MbY7BzfgWHX2a11y|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-10] => <==      Total: 47
05-18  14:23:07.415  INFO  -|MbY7BzfgWHX2a11y|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-10] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 13 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  14:23:07.416  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestParams:     
05-18  14:23:07.416  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] => Total:             41ms
05-18  14:23:07.416  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           //                      
05-18  14:23:07.417  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          //                       
05-18  14:23:07.417  INFO  -|MbY7BzfgWHX2a11y|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================//                        



05-18  14:23:14.104  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:23:16.222  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================\\                      
05-18  14:23:16.223  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          \\                     
05-18  14:23:16.225  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           \\                    
05-18  14:23:16.225  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestURI:        /charge/common/list
05-18  14:23:16.236  INFO  -|MbY7BzfgWHX2a1VJ|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-2] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:23:16.280  DEBUG -|MbY7BzfgWHX2a1VJ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-2] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (charge_type = ? AND company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:23:16.284  DEBUG -|MbY7BzfgWHX2a1VJ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-2] => ==> Parameters: 3(Integer), 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:23:16.288  DEBUG -|MbY7BzfgWHX2a1VJ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-2] => <==      Total: 1
05-18  14:23:16.289  INFO  -|MbY7BzfgWHX2a1VJ|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-2] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (charge_type = 3 AND company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:23:16.301  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestParams:     
05-18  14:23:16.302  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] => Total:             80ms
05-18  14:23:16.302  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           //                      
05-18  14:23:16.302  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          //                       
05-18  14:23:16.302  INFO  -|MbY7BzfgWHX2a1VJ|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================//                        



05-18  14:23:20.515  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================\\                      
05-18  14:23:20.516  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          \\                     
05-18  14:23:20.516  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           \\                    
05-18  14:23:20.516  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestURI:        /invoice/invoiceDetail/1406
05-18  14:23:20.523  DEBUG -|MvyIBzgQUvMyNjRF|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-4] => ==>  Preparing: SELECT invoice_id,invoice_no,invoice_status,customer_invoice_status,customer_invoice_way,invoice_type,job_type,contract_url,finance_entity,brand_id,balance,balance_name,invoice_title,invoice_title_name,bank,bank_accounts,invoice_currency_code,invoice_exchange_rate,invoicel_debit,invoicel_credit,arap_date,invoice_date,invoice_by,remark,create_by,create_date,create_name,update_by,update_date,u8_state,update_name,company_id,tenant_id,clear_status,clear_amount,adjust_delay_money,adjust_qc_money,adjust_red_money,adjust_tax_money,adjust_other_money,adjust_real_money,date_start,date_end,reviewer,reviewer_date,advance_pay_money,account_id,account_name,account_type,flow_id,settle_create_date,settle_title,settle_description,settle_template FROM cf_invoice_header WHERE invoice_id=?
05-18  14:23:20.530  DEBUG -|MvyIBzgQUvMyNjRF|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-4] => ==> Parameters: 1406(Long)
05-18  14:23:20.534  DEBUG -|MvyIBzgQUvMyNjRF|- [com.chenfan.finance.dao.CfInvoiceHeaderMapper.selectById] [http-nio-8092-exec-4] => <==      Total: 1
05-18  14:23:20.534  INFO  -|MvyIBzgQUvMyNjRF|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-4] =>     [sql]: ==> select * from cf_invoice_header where invoice_id=1406  <==   |   [time]: ==> 11 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfInvoiceHeader(inv ...  <==
05-18  14:23:20.535  INFO  -|MvyIBzgQUvMyNjRF|- [RPC_LOG] [http-nio-8092-exec-4] => 开始请求服务=chenfan-cloud-baseinfo,URI=/api/brand/getBrandInfo/8
05-18  14:23:20.535  DEBUG -|MvyIBzgQUvMyNjRF|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-4] => [BaseInfoRemoteServer#getBrandInfo] ---> GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8 HTTP/1.1
05-18  14:23:21.728  DEBUG -|MvyIBzgQUvMyNj0U|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-9] => [BaseInfoRemoteServer#getBrandInfo] <--- ERROR HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect (21012ms)
05-18  14:23:21.731  ERROR -|MvyIBzgQUvMyNj0U|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-9] => [[Exception, ERROR, Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8]] {}: {}
feign.RetryableException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy195.getBrandInfo(Unknown Source)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl.detail(CfInvoiceHeaderServiceImpl.java:438)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl$$FastClassBySpringCGLIB$$d0edf809.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl$$EnhancerBySpringCGLIB$$6ca18cf1.detail(<generated>)
	at com.chenfan.finance.controller.CfInvoiceHeaderController.invoiceDetail(CfInvoiceHeaderController.java:181)
	at com.chenfan.finance.controller.CfInvoiceHeaderController$$FastClassBySpringCGLIB$$9678e62b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.chenfan.finance.controller.CfInvoiceHeaderController$$EnhancerBySpringCGLIB$$74529d92.invoiceDetail(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 81 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 118 common frames omitted
05-18  14:23:21.738  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestParams:     
05-18  14:23:21.738  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] => Total:             21051ms
05-18  14:23:21.738  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           //                      
05-18  14:23:21.738  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          //                       
05-18  14:23:21.738  INFO  -|MvyIBzgQUvMyNj0U|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================//                        



05-18  14:23:41.547  DEBUG -|MvyIBzgQUvMyNjRF|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-4] => [BaseInfoRemoteServer#getBrandInfo] <--- ERROR HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect (21013ms)
05-18  14:23:41.549  ERROR -|MvyIBzgQUvMyNjRF|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-4] => [[Exception, ERROR, Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8]] {}: {}
feign.RetryableException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing GET http://chenfan-cloud-baseinfo/api/brand/getBrandInfo/8
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy195.getBrandInfo(Unknown Source)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl.detail(CfInvoiceHeaderServiceImpl.java:438)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl$$FastClassBySpringCGLIB$$d0edf809.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfInvoiceHeaderServiceImpl$$EnhancerBySpringCGLIB$$6ca18cf1.detail(<generated>)
	at com.chenfan.finance.controller.CfInvoiceHeaderController.invoiceDetail(CfInvoiceHeaderController.java:181)
	at com.chenfan.finance.controller.CfInvoiceHeaderController$$FastClassBySpringCGLIB$$9678e62b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.chenfan.finance.controller.CfInvoiceHeaderController$$EnhancerBySpringCGLIB$$74529d92.invoiceDetail(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 81 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 118 common frames omitted
05-18  14:23:41.560  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestParams:     
05-18  14:23:41.561  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] => Total:             21046ms
05-18  14:23:41.561  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           //                      
05-18  14:23:41.561  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          //                       
05-18  14:23:41.561  INFO  -|MvyIBzgQUvMyNjRF|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================//                        



05-18  14:23:43.605  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:24:00.124  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"172.20.0.4\",\"port\":8102,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.20.0.4#8102#DEFAULT#TEST_GROUP@@chenfan-cloud-baseinfo\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-baseinfo\",\"ephemeral\":true},{\"ip\":\"10.228.84.57\",\"port\":8102,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"10.228.84.57#8102#DEFAULT#TEST_GROUP@@chenfan-cloud-baseinfo\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-baseinfo\",\"ephemeral\":true}],\"dom\":\"TEST_GROUP@@chenfan-cloud-baseinfo\",\"name\":\"TEST_GROUP@@chenfan-cloud-baseinfo\",\"cacheMillis\":10000,\"lastRefTime\":1621319104416,\"checksum\":\"169fbcef33929d1807cbf32c20684a39\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":7699627832638533} from /10.228.81.30
05-18  14:24:00.124  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => new ips(1) service: TEST_GROUP@@chenfan-cloud-baseinfo -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8102#DEFAULT#TEST_GROUP@@chenfan-cloud-baseinfo","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8102,"serviceName":"TEST_GROUP@@chenfan-cloud-baseinfo","weight":1.0}]
05-18  14:24:00.125  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => current ips:(2) service: TEST_GROUP@@chenfan-cloud-baseinfo -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.4#8102#DEFAULT#TEST_GROUP@@chenfan-cloud-baseinfo","ip":"172.20.0.4","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8102,"serviceName":"TEST_GROUP@@chenfan-cloud-baseinfo","weight":1.0},{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8102#DEFAULT#TEST_GROUP@@chenfan-cloud-baseinfo","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8102,"serviceName":"TEST_GROUP@@chenfan-cloud-baseinfo","weight":1.0}]
05-18  14:24:03.240  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] => ========================\\                      
05-18  14:24:03.240  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] =>                          \\                     
05-18  14:24:03.240  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] =>                           \\                    
05-18  14:24:03.240  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] => RequestURI:        /cfClear/list
05-18  14:24:03.245  INFO  -|bQFJ3afgWHEoP23h|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-6] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  14:24:03.246  INFO  -|bQFJ3afgWHEoP23h|- [RPC_LOG] [http-nio-8092-exec-6] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:24:03.247  DEBUG -|bQFJ3afgWHEoP23h|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-6] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:24:03.320  DEBUG -|bQFJ3afgWHEoP23h|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-6] => [PrivilegeUserServer#listUsers] <--- HTTP/1.1 200  (72ms)
05-18  14:24:03.369  INFO  -|bQFJ3afgWHEoP23h|- [RPC_LOG] [http-nio-8092-exec-6] => 开始请求服务=chenfan-cloud-vendor-center,URI=/vendor/getAllVendorListV2
05-18  14:24:03.369  DEBUG -|bQFJ3afgWHEoP23h|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-6] => [VendorCenterServer#getAllVendorList] ---> POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2 HTTP/1.1
05-18  14:24:03.397  INFO  -|bQFJ3afgWHEoP23h|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-6] => Flipping property: chenfan-cloud-vendor-center.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:24:03.398  INFO  -|bQFJ3afgWHEoP23h|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-6] => Client: chenfan-cloud-vendor-center instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-vendor-center,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  14:24:03.399  INFO  -|bQFJ3afgWHEoP23h|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-6] => Using serverListUpdater PollingServerListUpdater
05-18  14:24:03.401  INFO  -|bQFJ3afgWHEoP23h|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-6] => new ips(1) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"172.20.0.29","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:24:03.401  INFO  -|bQFJ3afgWHEoP23h|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-6] => current ips:(1) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"172.20.0.29","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:24:03.402  INFO  -|bQFJ3afgWHEoP23h|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-6] => Flipping property: chenfan-cloud-vendor-center.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:24:03.403  INFO  -|bQFJ3afgWHEoP23h|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-6] => DynamicServerListLoadBalancer for client chenfan-cloud-vendor-center initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-vendor-center,current list of Servers=[172.20.0.29:8088],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.20.0.29:8088;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@5a3d8bf9
05-18  14:24:04.400  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-0] => Flipping property: chenfan-cloud-vendor-center.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:24:13.106  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:24:13.142  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================\\                      
05-18  14:24:13.142  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          \\                     
05-18  14:24:13.143  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           \\                    
05-18  14:24:13.143  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestURI:        /cfClear/list
05-18  14:24:13.148  INFO  -|bQFJ3afgWHEoP2Bs|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-7] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  14:24:13.149  INFO  -|bQFJ3afgWHEoP2Bs|- [RPC_LOG] [http-nio-8092-exec-7] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:24:13.149  DEBUG -|bQFJ3afgWHEoP2Bs|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-7] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:24:24.408  DEBUG -|bQFJ3afgWHEoP23h|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-6] => [VendorCenterServer#getAllVendorList] <--- ERROR HttpHostConnectException: Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect (21040ms)
05-18  14:24:24.409  ERROR -|bQFJ3afgWHEoP23h|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-6] => [[Exception, ERROR, Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect executing POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2]] {}: {}
feign.RetryableException: Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect executing POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy198.getAllVendorList(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.getBalances(CfClearHeaderServiceImpl.java:878)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:735)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 72 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 109 common frames omitted
05-18  14:24:24.417  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] => RequestParams:     
05-18  14:24:24.417  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] => Total:             21177ms
05-18  14:24:24.417  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] =>                           //                      
05-18  14:24:24.417  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] =>                          //                       
05-18  14:24:24.417  INFO  -|bQFJ3afgWHEoP23h|- [HTTP_LOG] [http-nio-8092-exec-6] => ========================//                        



05-18  14:24:34.162  DEBUG -|bQFJ3afgWHEoP2Bs|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-7] => [PrivilegeUserServer#listUsers] <--- ERROR HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect (21013ms)
05-18  14:24:34.163  ERROR -|bQFJ3afgWHEoP2Bs|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-7] => [[Exception, ERROR, Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers]] {}: {}
feign.RetryableException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy199.listUsers(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:729)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 71 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 108 common frames omitted
05-18  14:24:34.172  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestParams:     
05-18  14:24:34.172  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] => Total:             21030ms
05-18  14:24:34.172  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           //                      
05-18  14:24:34.172  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          //                       
05-18  14:24:34.172  INFO  -|bQFJ3afgWHEoP2Bs|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================//                        



05-18  14:24:42.609  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:24:54.418  INFO  -|bQFJ3afgWHEoP27m|- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.client.naming.updater] => new ips(1) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:24:54.420  INFO  -|bQFJ3afgWHEoP27m|- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.client.naming.updater] => current ips:(2) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"172.20.0.29","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0},{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:24:54.499  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"172.20.0.29\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true},{\"ip\":\"10.228.84.57\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true}],\"dom\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"name\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"cacheMillis\":10000,\"lastRefTime\":1621319158791,\"checksum\":\"5bdb432c9c66b748bbe9c4189c54018a\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":7699682208036753} from /10.228.81.30
05-18  14:25:04.845  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================\\                      
05-18  14:25:04.845  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          \\                     
05-18  14:25:04.846  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           \\                    
05-18  14:25:04.846  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestURI:        /cfClear/list
05-18  14:25:04.851  INFO  -|bQFJ3afgWHEoP2z0|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-1] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103],companyIds:null,userIds:[1336971001799380993]
05-18  14:25:04.851  INFO  -|bQFJ3afgWHEoP2z0|- [RPC_LOG] [http-nio-8092-exec-1] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:25:04.852  DEBUG -|bQFJ3afgWHEoP2z0|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-1] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:25:04.921  DEBUG -|bQFJ3afgWHEoP2z0|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-1] => [PrivilegeUserServer#listUsers] <--- HTTP/1.1 200  (68ms)
05-18  14:25:04.929  INFO  -|bQFJ3afgWHEoP2z0|- [RPC_LOG] [http-nio-8092-exec-1] => 开始请求服务=chenfan-cloud-vendor-center,URI=/vendor/getAllVendorListV2
05-18  14:25:04.930  DEBUG -|bQFJ3afgWHEoP2z0|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-1] => [VendorCenterServer#getAllVendorList] ---> POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2 HTTP/1.1
05-18  14:25:12.111  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:25:25.933  DEBUG -|bQFJ3afgWHEoP2z0|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-1] => [VendorCenterServer#getAllVendorList] <--- ERROR HttpHostConnectException: Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect (21004ms)
05-18  14:25:25.937  ERROR -|bQFJ3afgWHEoP2z0|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-1] => [[Exception, ERROR, Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect executing POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2]] {}: {}
feign.RetryableException: Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect executing POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy198.getAllVendorList(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.getBalances(CfClearHeaderServiceImpl.java:878)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:735)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.29:8088 [/172.20.0.29] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 72 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 109 common frames omitted
05-18  14:25:25.953  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestParams:     
05-18  14:25:25.954  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] => Total:             21109ms
05-18  14:25:25.954  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           //                      
05-18  14:25:25.954  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          //                       
05-18  14:25:25.954  INFO  -|bQFJ3afgWHEoP2z0|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================//                        



05-18  14:25:41.612  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:25:52.382  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================\\                      
05-18  14:25:52.382  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          \\                     
05-18  14:25:52.383  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           \\                    
05-18  14:25:52.383  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestURI:        /cfClear/list
05-18  14:25:52.386  INFO  -|EBvUbagQUvMyNjLD|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-2] => 获取的关联的brandIds:null,companyIds:null,userIds:null
05-18  14:25:52.386  INFO  -|EBvUbagQUvMyNjLD|- [RPC_LOG] [http-nio-8092-exec-2] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:25:52.386  DEBUG -|EBvUbagQUvMyNjLD|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-2] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:25:53.013  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================\\                      
05-18  14:25:53.013  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          \\                     
05-18  14:25:53.014  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           \\                    
05-18  14:25:53.014  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestURI:        /tax/invoice/preAddView
05-18  14:25:53.139  DEBUG -|MbY7BzfgWHX2a1s1|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectBatchIds] [http-nio-8092-exec-4] => ==>  Preparing: SELECT charge_id,charge_code,charge_source_type,charge_type,check_status,arap_type,split_type,charge_source_code,charge_source_detail,currency_code,exchange_rate,tax_rate,charge_unit,charge_qty,price_pp,amount_pp,balance,finance_entity,charge_month_belong_to,tax_invoice_no,tax_invoice_date,invoice_no,invoice_title,invoice_title_name,invoice_date,clear_no,actual_amount,actual_date,actual_history_date,remark,charge_date,bill_source_type,invoice_entrance_date,sett_template,create_by,create_name,create_date,company_id,tenant_id,update_by,update_name,update_date,parent_id,split_id,brand_id FROM cf_charge_common WHERE charge_id IN ( ? )
05-18  14:25:53.144  DEBUG -|MbY7BzfgWHX2a1s1|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectBatchIds] [http-nio-8092-exec-4] => ==> Parameters: 9123(Long)
05-18  14:25:53.147  DEBUG -|MbY7BzfgWHX2a1s1|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectBatchIds] [http-nio-8092-exec-4] => <==      Total: 1
05-18  14:25:53.148  INFO  -|MbY7BzfgWHX2a1s1|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-4] =>     [sql]: ==> select * from cf_charge_common where charge_id in ( 9123 ) <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  14:25:53.150  INFO  -|MbY7BzfgWHX2a1s1|- [RPC_LOG] [http-nio-8092-exec-4] => 开始请求服务=chenfan-cloud-mcn,URI=/incomeContract/incomeContract/getByCode
05-18  14:25:53.151  DEBUG -|MbY7BzfgWHX2a1s1|- [com.chenfan.finance.server.McnRemoteServer] [http-nio-8092-exec-4] => [McnRemoteServer#getByCode] ---> GET http://chenfan-cloud-mcn/incomeContract/incomeContract/getByCode?contractCode=SR2105170041 HTTP/1.1
05-18  14:25:53.182  INFO  -|MbY7BzfgWHX2a1s1|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-4] => Flipping property: chenfan-cloud-mcn.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:25:53.184  INFO  -|MbY7BzfgWHX2a1s1|- [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-8092-exec-4] => Client: chenfan-cloud-mcn instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-mcn,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
05-18  14:25:53.184  INFO  -|MbY7BzfgWHX2a1s1|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-4] => Using serverListUpdater PollingServerListUpdater
05-18  14:25:53.186  INFO  -|MbY7BzfgWHX2a1s1|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-4] => new ips(1) service: TEST_GROUP@@chenfan-cloud-mcn -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.5#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-mcn","ip":"172.20.0.5","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-mcn","weight":1.0}]
05-18  14:25:53.191  INFO  -|MbY7BzfgWHX2a1s1|- [com.alibaba.nacos.client.naming] [http-nio-8092-exec-4] => current ips:(1) service: TEST_GROUP@@chenfan-cloud-mcn -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.5#8099#DEFAULT#TEST_GROUP@@chenfan-cloud-mcn","ip":"172.20.0.5","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8099,"serviceName":"TEST_GROUP@@chenfan-cloud-mcn","weight":1.0}]
05-18  14:25:53.192  INFO  -|MbY7BzfgWHX2a1s1|- [com.netflix.config.ChainedDynamicProperty] [http-nio-8092-exec-4] => Flipping property: chenfan-cloud-mcn.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:25:53.193  INFO  -|MbY7BzfgWHX2a1s1|- [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-8092-exec-4] => DynamicServerListLoadBalancer for client chenfan-cloud-mcn initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=chenfan-cloud-mcn,current list of Servers=[172.20.0.5:8099],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.20.0.5:8099;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@10a874ce
05-18  14:25:53.613  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"10.228.84.57\",\"port\":8088,\"valid\":false,\"healthy\":false,\"marked\":false,\"instanceId\":\"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true},{\"ip\":\"172.20.0.29\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true}],\"dom\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"name\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"cacheMillis\":10000,\"lastRefTime\":1621319217908,\"checksum\":\"5bdb432c9c66b748bbe9c4189c54018a\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":7699741324910663} from /10.228.81.30
05-18  14:25:53.614  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => modified ips(1) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":false,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:25:53.614  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => current ips:(2) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":false,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0},{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"172.20.0.29","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:25:54.186  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.config.ChainedDynamicProperty] [PollingServerListUpdater-0] => Flipping property: chenfan-cloud-mcn.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
05-18  14:25:54.532  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================\\                      
05-18  14:25:54.534  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          \\                     
05-18  14:25:54.534  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           \\                    
05-18  14:25:54.534  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestURI:        /charge/common/balance
05-18  14:25:54.550  DEBUG -|MbY7BzfgWHX2a1px|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-5] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  14:25:54.554  DEBUG -|MbY7BzfgWHX2a1px|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-5] => ==> Parameters: 
05-18  14:25:54.563  DEBUG -|MbY7BzfgWHX2a1px|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-5] => <==      Total: 47
05-18  14:25:54.565  INFO  -|MbY7BzfgWHX2a1px|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-5] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 13 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  14:25:54.572  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] => RequestParams:     
05-18  14:25:54.572  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] => Total:             40ms
05-18  14:25:54.572  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] =>                           //                      
05-18  14:25:54.572  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] =>                          //                       
05-18  14:25:54.572  INFO  -|MbY7BzfgWHX2a1px|- [HTTP_LOG] [http-nio-8092-exec-5] => ========================//                        



05-18  14:25:55.061  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"10.228.84.57\",\"port\":8088,\"valid\":false,\"healthy\":false,\"marked\":false,\"instanceId\":\"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true},{\"ip\":\"172.20.0.29\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true}],\"dom\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"name\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"cacheMillis\":10000,\"lastRefTime\":1621319219355,\"checksum\":\"7e27c0d5d3a613555cb58965d199281f\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":7699742772097678} from /10.228.81.30
05-18  14:25:57.639  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================\\                      
05-18  14:25:57.639  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          \\                     
05-18  14:25:57.640  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           \\                    
05-18  14:25:57.640  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestURI:        /charge/common/list
05-18  14:25:57.645  INFO  -|MbY7BzfgWHX2a1Cp|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-3] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:25:57.653  DEBUG -|MbY7BzfgWHX2a1Cp|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-3] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (charge_type = ? AND company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:25:57.657  DEBUG -|MbY7BzfgWHX2a1Cp|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-3] => ==> Parameters: 3(Integer), 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:25:57.661  DEBUG -|MbY7BzfgWHX2a1Cp|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-3] => <==      Total: 1
05-18  14:25:57.662  INFO  -|MbY7BzfgWHX2a1Cp|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (charge_type = 3 AND company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:25:57.669  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestParams:     
05-18  14:25:57.670  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] => Total:             31ms
05-18  14:25:57.670  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           //                      
05-18  14:25:57.670  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          //                       
05-18  14:25:57.670  INFO  -|MbY7BzfgWHX2a1Cp|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================//                        



05-18  14:26:00.056  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"172.20.0.29\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true},{\"ip\":\"10.228.84.57\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true}],\"dom\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"name\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"cacheMillis\":10000,\"lastRefTime\":1621319224350,\"checksum\":\"7e27c0d5d3a613555cb58965d199281f\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":7699747767042988} from /10.228.81.30
05-18  14:26:00.057  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => modified ips(1) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:26:00.058  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => current ips:(2) service: TEST_GROUP@@chenfan-cloud-vendor-center -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"172.20.0.29","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0},{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"serviceName":"TEST_GROUP@@chenfan-cloud-vendor-center","weight":1.0}]
05-18  14:26:11.116  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:26:13.397  DEBUG -|EBvUbagQUvMyNjLD|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-2] => [PrivilegeUserServer#listUsers] <--- ERROR HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect (21011ms)
05-18  14:26:13.398  ERROR -|EBvUbagQUvMyNjLD|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-2] => [[Exception, ERROR, Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers]] {}: {}
feign.RetryableException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect executing GET http://chenfan-cloud-privilege/users/listUsers
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy199.listUsers(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:729)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.21:8099 [/172.20.0.21] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 71 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 108 common frames omitted
05-18  14:26:13.399  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] => RequestParams:     
05-18  14:26:13.399  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] => Total:             21017ms
05-18  14:26:13.399  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] =>                           //                      
05-18  14:26:13.399  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] =>                          //                       
05-18  14:26:13.399  INFO  -|EBvUbagQUvMyNjLD|- [HTTP_LOG] [http-nio-8092-exec-2] => ========================//                        



05-18  14:26:14.203  DEBUG -|MbY7BzfgWHX2a1s1|- [com.chenfan.finance.server.McnRemoteServer] [http-nio-8092-exec-4] => [McnRemoteServer#getByCode] <--- ERROR HttpHostConnectException: Connect to 172.20.0.5:8099 [/172.20.0.5] failed: Connection timed out: connect (21053ms)
05-18  14:26:14.206  ERROR -|MbY7BzfgWHX2a1s1|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-4] => [[Exception, ERROR, Connect to 172.20.0.5:8099 [/172.20.0.5] failed: Connection timed out: connect executing GET http://chenfan-cloud-mcn/incomeContract/incomeContract/getByCode?contractCode=SR2105170041]] {}: {}
feign.RetryableException: Connect to 172.20.0.5:8099 [/172.20.0.5] failed: Connection timed out: connect executing GET http://chenfan-cloud-mcn/incomeContract/incomeContract/getByCode?contractCode=SR2105170041
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy211.getByCode(Unknown Source)
	at com.chenfan.finance.service.common.TaxInvoiceCommonService.preAddView(TaxInvoiceCommonService.java:243)
	at com.chenfan.finance.service.common.TaxInvoiceCommonService$$FastClassBySpringCGLIB$$c5d77bc8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.common.TaxInvoiceCommonService$$EnhancerBySpringCGLIB$$5cf2e78e.preAddView(<generated>)
	at com.chenfan.finance.controller.common.TaxInvoiceCommonController.preAddView(TaxInvoiceCommonController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.5:8099 [/172.20.0.5] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 71 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 108 common frames omitted
05-18  14:26:14.214  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestParams:     331652544780300={"chargeIds":["9123"]}
05-18  14:26:14.214  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] => Total:             21201ms
05-18  14:26:14.214  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           //                      
05-18  14:26:14.214  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          //                       
05-18  14:26:14.214  INFO  -|MbY7BzfgWHX2a1s1|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================//                        



05-18  14:26:20.410  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================\\                      
05-18  14:26:20.410  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          \\                     
05-18  14:26:20.411  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           \\                    
05-18  14:26:20.411  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestURI:        /charge/common/list
05-18  14:26:20.416  INFO  -|MbY7BzfgWHX2a1Zt|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-10] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:26:20.425  DEBUG -|MbY7BzfgWHX2a1Zt|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-10] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (charge_type = ? AND company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:26:20.428  DEBUG -|MbY7BzfgWHX2a1Zt|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-10] => ==> Parameters: 3(Integer), 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:26:20.432  DEBUG -|MbY7BzfgWHX2a1Zt|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-10] => <==      Total: 1
05-18  14:26:20.433  INFO  -|MbY7BzfgWHX2a1Zt|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-10] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (charge_type = 3 AND company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:26:20.440  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestParams:     
05-18  14:26:20.440  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] => Total:             30ms
05-18  14:26:20.440  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           //                      
05-18  14:26:20.440  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          //                       
05-18  14:26:20.440  INFO  -|MbY7BzfgWHX2a1Zt|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================//                        



05-18  14:26:32.238  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] => ========================\\                      
05-18  14:26:32.238  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] =>                          \\                     
05-18  14:26:32.239  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] =>                           \\                    
05-18  14:26:32.239  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] => RequestURI:        /cfClear/list
05-18  14:26:32.242  INFO  -|EBvUbagQUvMyNjac|- [com.chenfan.finance.controller.CfClearController] [http-nio-8092-exec-8] => 获取的关联的brandIds:null,companyIds:null,userIds:null
05-18  14:26:32.242  INFO  -|EBvUbagQUvMyNjac|- [RPC_LOG] [http-nio-8092-exec-8] => 开始请求服务=chenfan-cloud-privilege,URI=/users/listUsers
05-18  14:26:32.243  DEBUG -|EBvUbagQUvMyNjac|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-8] => [PrivilegeUserServer#listUsers] ---> GET http://chenfan-cloud-privilege/users/listUsers HTTP/1.1
05-18  14:26:32.283  DEBUG -|EBvUbagQUvMyNjac|- [com.chenfan.finance.server.PrivilegeUserServer] [http-nio-8092-exec-8] => [PrivilegeUserServer#listUsers] <--- HTTP/1.1 200  (39ms)
05-18  14:26:32.289  INFO  -|EBvUbagQUvMyNjac|- [RPC_LOG] [http-nio-8092-exec-8] => 开始请求服务=chenfan-cloud-vendor-center,URI=/vendor/getAllVendorListV2
05-18  14:26:32.289  DEBUG -|EBvUbagQUvMyNjac|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-8] => [VendorCenterServer#getAllVendorList] ---> POST http://chenfan-cloud-vendor-center/vendor/getAllVendorListV2 HTTP/1.1
05-18  14:26:32.423  DEBUG -|EBvUbagQUvMyNjac|- [com.chenfan.finance.server.VendorCenterServer] [http-nio-8092-exec-8] => [VendorCenterServer#getAllVendorList] <--- HTTP/1.1 200  (134ms)
05-18  14:26:32.454  INFO  -|EBvUbagQUvMyNjac|- [RPC_LOG] [http-nio-8092-exec-8] => 开始请求服务=chenfan-cloud-baseinfo,URI=/api/brand/getBrandByBrandIdList
05-18  14:26:32.455  DEBUG -|EBvUbagQUvMyNjac|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-8] => [BaseInfoRemoteServer#getBrandByBrandIdList] ---> POST http://chenfan-cloud-baseinfo/api/brand/getBrandByBrandIdList HTTP/1.1
05-18  14:26:32.487  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================\\                      
05-18  14:26:32.488  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          \\                     
05-18  14:26:32.488  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           \\                    
05-18  14:26:32.488  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestURI:        /charge/common/list
05-18  14:26:32.492  INFO  -|MbY7BzfgWHX2a11I|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-9] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:26:32.501  DEBUG -|MbY7BzfgWHX2a11I|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-9] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (charge_type = ? AND company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:26:32.504  DEBUG -|MbY7BzfgWHX2a11I|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-9] => ==> Parameters: 3(Integer), 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:26:32.508  DEBUG -|MbY7BzfgWHX2a11I|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-9] => <==      Total: 1
05-18  14:26:32.509  INFO  -|MbY7BzfgWHX2a11I|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-9] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (charge_type = 3 AND company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:26:32.516  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestParams:     
05-18  14:26:32.516  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] => Total:             29ms
05-18  14:26:32.516  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           //                      
05-18  14:26:32.516  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          //                       
05-18  14:26:32.516  INFO  -|MbY7BzfgWHX2a11I|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================//                        



05-18  14:26:40.617  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:26:42.538  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================\\                      
05-18  14:26:42.538  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          \\                     
05-18  14:26:42.539  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           \\                    
05-18  14:26:42.539  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestURI:        /charge/common/list
05-18  14:26:42.543  INFO  -|MbY7BzfgWHX2a1De|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-3] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:26:42.550  DEBUG -|MbY7BzfgWHX2a1De|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-3] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (charge_type = ? AND company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:26:42.554  DEBUG -|MbY7BzfgWHX2a1De|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-3] => ==> Parameters: 3(Integer), 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:26:42.557  DEBUG -|MbY7BzfgWHX2a1De|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-3] => <==      Total: 1
05-18  14:26:42.558  INFO  -|MbY7BzfgWHX2a1De|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (charge_type = 3 AND company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 6 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:26:42.564  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestParams:     
05-18  14:26:42.564  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] => Total:             26ms
05-18  14:26:42.564  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           //                      
05-18  14:26:42.564  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          //                       
05-18  14:26:42.564  INFO  -|MbY7BzfgWHX2a1De|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================//                        



05-18  14:26:53.467  DEBUG -|EBvUbagQUvMyNjac|- [com.chenfan.finance.server.BaseInfoRemoteServer] [http-nio-8092-exec-8] => [BaseInfoRemoteServer#getBrandByBrandIdList] <--- ERROR HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect (21014ms)
05-18  14:26:53.468  ERROR -|EBvUbagQUvMyNjac|- [com.chenfan.common.exception.GlobalDefaultExceptionHandler] [http-nio-8092-exec-8] => [[Exception, ERROR, Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing POST http://chenfan-cloud-baseinfo/api/brand/getBrandByBrandIdList]] {}: {}
feign.RetryableException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect executing POST http://chenfan-cloud-baseinfo/api/brand/getBrandByBrandIdList
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:124)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:75)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy195.getBrandByBrandIdList(Unknown Source)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.getBrandInfoList(CfClearHeaderServiceImpl.java:777)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl.customList(CfClearHeaderServiceImpl.java:737)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$FastClassBySpringCGLIB$$15555469.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.chenfan.finance.service.impl.CfClearHeaderServiceImpl$$EnhancerBySpringCGLIB$$f1a45e11.customList(<generated>)
	at com.chenfan.finance.controller.CfClearController.list(CfClearController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.traceHttp(FilterConfig.java:144)
	at com.chenfan.ccp.plug.log.config.FilterConfig$CustomFilter.doFilter(FilterConfig.java:200)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.20.0.4:8102 [/172.20.0.4] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at feign.httpclient.ApacheHttpClient.execute(ApacheHttpClient.java:83)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:117)
	... 72 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 109 common frames omitted
05-18  14:26:53.469  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] => RequestParams:     
05-18  14:26:53.469  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] => Total:             21231ms
05-18  14:26:53.469  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] =>                           //                      
05-18  14:26:53.469  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] =>                          //                       
05-18  14:26:53.469  INFO  -|EBvUbagQUvMyNjac|- [HTTP_LOG] [http-nio-8092-exec-8] => ========================//                        



05-18  14:27:08.580  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================\\                      
05-18  14:27:08.580  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          \\                     
05-18  14:27:08.580  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           \\                    
05-18  14:27:08.581  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestURI:        /charge/common/list
05-18  14:27:08.584  INFO  -|MbY7BzfgWHX2a1Rd|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-4] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:27:08.591  DEBUG -|MbY7BzfgWHX2a1Rd|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-4] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:27:08.594  DEBUG -|MbY7BzfgWHX2a1Rd|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-4] => ==> Parameters: 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:27:08.597  DEBUG -|MbY7BzfgWHX2a1Rd|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-4] => <==      Total: 1
05-18  14:27:08.598  INFO  -|MbY7BzfgWHX2a1Rd|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-4] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:27:08.603  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] => RequestParams:     
05-18  14:27:08.603  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] => Total:             23ms
05-18  14:27:08.604  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] =>                           //                      
05-18  14:27:08.604  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] =>                          //                       
05-18  14:27:08.604  INFO  -|MbY7BzfgWHX2a1Rd|- [HTTP_LOG] [http-nio-8092-exec-4] => ========================//                        



05-18  14:27:10.118  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:27:18.105  INFO  -||- [com.alibaba.nacos.client.naming] [com.alibaba.nacos.naming.push.receiver] => received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"172.20.0.29\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.20.0.29#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true},{\"ip\":\"10.228.84.57\",\"port\":8088,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"10.228.84.57#8088#DEFAULT#TEST_GROUP@@chenfan-cloud-vendor-center\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"ephemeral\":true}],\"dom\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"name\":\"TEST_GROUP@@chenfan-cloud-vendor-center\",\"cacheMillis\":10000,\"lastRefTime\":1621319302401,\"checksum\":\"5bdb432c9c66b748bbe9c4189c54018a\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":7699825817880867} from /10.228.81.30
05-18  14:27:20.251  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================\\                      
05-18  14:27:20.251  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          \\                     
05-18  14:27:20.251  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           \\                    
05-18  14:27:20.252  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestURI:        /charge/common/balance
05-18  14:27:20.257  DEBUG -|MbY7BzfgWHX2a1Ah|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-7] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  14:27:20.260  DEBUG -|MbY7BzfgWHX2a1Ah|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-7] => ==> Parameters: 
05-18  14:27:20.266  DEBUG -|MbY7BzfgWHX2a1Ah|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-7] => <==      Total: 47
05-18  14:27:20.266  INFO  -|MbY7BzfgWHX2a1Ah|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-7] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 8 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  14:27:20.272  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] => RequestParams:     
05-18  14:27:20.272  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] => Total:             21ms
05-18  14:27:20.272  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] =>                           //                      
05-18  14:27:20.272  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] =>                          //                       
05-18  14:27:20.272  INFO  -|MbY7BzfgWHX2a1Ah|- [HTTP_LOG] [http-nio-8092-exec-7] => ========================//                        



05-18  14:27:22.226  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================\\                      
05-18  14:27:22.227  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          \\                     
05-18  14:27:22.229  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           \\                    
05-18  14:27:22.229  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestURI:        /charge/common/list
05-18  14:27:22.237  INFO  -|MbY7BzfgWHX2a1nQ|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-10] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:27:22.246  DEBUG -|MbY7BzfgWHX2a1nQ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-10] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:27:22.249  DEBUG -|MbY7BzfgWHX2a1nQ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-10] => ==> Parameters: 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:27:22.252  DEBUG -|MbY7BzfgWHX2a1nQ|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-10] => <==      Total: 1
05-18  14:27:22.253  INFO  -|MbY7BzfgWHX2a1nQ|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-10] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 5 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:27:22.258  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] => RequestParams:     
05-18  14:27:22.259  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] => Total:             33ms
05-18  14:27:22.259  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] =>                           //                      
05-18  14:27:22.259  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] =>                          //                       
05-18  14:27:22.259  INFO  -|MbY7BzfgWHX2a1nQ|- [HTTP_LOG] [http-nio-8092-exec-10] => ========================//                        



05-18  14:27:27.065  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================\\                      
05-18  14:27:27.065  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          \\                     
05-18  14:27:27.066  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           \\                    
05-18  14:27:27.066  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestURI:        /charge/common/balance
05-18  14:27:27.073  DEBUG -|MbY7BzfgWHX2a10k|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-1] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  14:27:27.076  DEBUG -|MbY7BzfgWHX2a10k|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-1] => ==> Parameters: 
05-18  14:27:27.080  DEBUG -|MbY7BzfgWHX2a10k|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-1] => <==      Total: 47
05-18  14:27:27.082  INFO  -|MbY7BzfgWHX2a10k|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-1] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  14:27:27.087  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] => RequestParams:     
05-18  14:27:27.088  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] => Total:             23ms
05-18  14:27:27.088  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] =>                           //                      
05-18  14:27:27.088  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] =>                          //                       
05-18  14:27:27.088  INFO  -|MbY7BzfgWHX2a10k|- [HTTP_LOG] [http-nio-8092-exec-1] => ========================//                        



05-18  14:27:28.528  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================\\                      
05-18  14:27:28.529  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          \\                     
05-18  14:27:28.531  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           \\                    
05-18  14:27:28.531  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestURI:        /charge/common/list
05-18  14:27:28.540  INFO  -|MbY7BzfgWHX2a1un|- [com.chenfan.finance.controller.common.ChargeCommonController] [http-nio-8092-exec-9] => 获取的关联的brandIds:[2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94],companyIds:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1],userIds:null
05-18  14:27:28.548  DEBUG -|MbY7BzfgWHX2a1un|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-9] => ==>  Preparing: SELECT count(0) FROM cf_charge_common WHERE (company_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND brand_id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) AND check_status <> ?)
05-18  14:27:28.551  DEBUG -|MbY7BzfgWHX2a1un|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-9] => ==> Parameters: 2(Long), 3(Long), 4(Long), 5(Long), 6(Long), 7(Long), 8(Long), 9(Long), 10(Long), 11(Long), 12(Long), 13(Long), 14(Long), 15(Long), 16(Long), 1364035393439141890(Long), 1369849143844270081(Long), 1369942603104301057(Long), 1381447836503117825(Long), 1(Long), 2(Integer), 3(Integer), 4(Integer), 8(Integer), 21(Integer), 22(Integer), 23(Integer), 24(Integer), 26(Integer), 27(Integer), 28(Integer), 29(Integer), 31(Integer), 32(Integer), 36(Integer), 39(Integer), 42(Integer), 52(Integer), 62(Integer), 63(Integer), 64(Integer), 65(Integer), 67(Integer), 68(Integer), 69(Integer), 71(Integer), 72(Integer), 73(Integer), 74(Integer), 75(Integer), 76(Integer), 77(Integer), 78(Integer), 79(Integer), 80(Integer), 81(Integer), 82(Integer), 83(Integer), 84(Integer), 85(Integer), 86(Integer), 87(Integer), 88(Integer), 89(Integer), 90(Integer), 91(Integer), 92(Integer), 93(Integer), 94(Integer), 0(Integer)
05-18  14:27:28.553  DEBUG -|MbY7BzfgWHX2a1un|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList_COUNT] [http-nio-8092-exec-9] => <==      Total: 1
05-18  14:27:28.553  INFO  -|MbY7BzfgWHX2a1un|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-9] =>     [sql]: ==> SELECT count(0) FROM cf_charge_common WHERE (company_id IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1364035393439141890, 1369849143844270081, 1369942603104301057, 1381447836503117825, 1) AND brand_id IN (2, 3, 4, 8, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 39, 42, 52, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94) AND check_status <> 0) <==   |   [time]: ==> 4 ms <==   |   [size]: ==> 1 <==   |   [result]: ==> [0]  <==
05-18  14:27:28.561  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] => RequestParams:     
05-18  14:27:28.561  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] => Total:             33ms
05-18  14:27:28.561  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] =>                           //                      
05-18  14:27:28.561  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] =>                          //                       
05-18  14:27:28.561  INFO  -|MbY7BzfgWHX2a1un|- [HTTP_LOG] [http-nio-8092-exec-9] => ========================//                        



05-18  14:27:34.134  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================\\                      
05-18  14:27:34.135  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          \\                     
05-18  14:27:34.136  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           \\                    
05-18  14:27:34.137  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestURI:        /charge/common/balance
05-18  14:27:34.145  DEBUG -|MbY7BzfgWHX2a1eq|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-3] => ==>  Preparing: SELECT balance FROM cf_charge_common GROUP BY balance
05-18  14:27:34.147  DEBUG -|MbY7BzfgWHX2a1eq|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-3] => ==> Parameters: 
05-18  14:27:34.151  DEBUG -|MbY7BzfgWHX2a1eq|- [com.chenfan.finance.dao.CfChargeCommonMapper.selectList] [http-nio-8092-exec-3] => <==      Total: 47
05-18  14:27:34.152  INFO  -|MbY7BzfgWHX2a1eq|- [com.chenfan.ccp.plug.log.handler.DynamicDataSourceInterceptor] [http-nio-8092-exec-3] =>     [sql]: ==> SELECT balance FROM cf_charge_common GROUP BY balance <==   |   [time]: ==> 7 ms <==   |   [size]: ==> 47 <==   |   [result]: ==> [CfChargeCommon(char ...  <==
05-18  14:27:34.157  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] => RequestParams:     
05-18  14:27:34.157  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] => Total:             23ms
05-18  14:27:34.157  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] =>                           //                      
05-18  14:27:34.158  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] =>                          //                       
05-18  14:27:34.158  INFO  -|MbY7BzfgWHX2a1eq|- [HTTP_LOG] [http-nio-8092-exec-3] => ========================//                        



05-18  14:27:39.620  INFO  -||- [com.alibaba.nacos.client.config.impl.ClientWorker] [com.alibaba.nacos.client.Worker.longPolling.fixed-10.228.81.30_3848-test] => get changedGroupKeys:[]
05-18  14:28:03.900  INFO  -|bQFJ3afgWHEoP27m|- [com.netflix.loadbalancer.PollingServerListUpdater] [Thread-104] => Shutting down the Executor Pool for PollingServerListUpdater
05-18  14:28:03.910  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [SpringContextShutdownHook] => Shutting down ExecutorService 'sheduleClearMemory'
05-18  14:28:03.918  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [SpringContextShutdownHook] => De-registering from Nacos Server now...
05-18  14:28:03.918  INFO  -||- [com.alibaba.nacos.client.naming] [SpringContextShutdownHook] => [BEAT] removing beat: TEST_GROUP@@chenfan-cloud-finance:10.228.84.57:8092 from beat map.
05-18  14:28:03.919  INFO  -||- [com.alibaba.nacos.client.naming] [SpringContextShutdownHook] => [DEREGISTER-SERVICE] test deregistering service TEST_GROUP@@chenfan-cloud-finance with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","ip":"10.228.84.57","ipDeleteTimeout":30000,"metadata":{},"port":8092,"weight":1.0}
05-18  14:28:03.921  INFO  -||- [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] [SpringContextShutdownHook] => De-registration finished.
05-18  14:28:03.927  INFO  -||- [com.xxl.job.core.server.EmbedServer] [Thread-81] => >>>>>>>>>>> xxl-job remoting server stop.
05-18  14:28:03.935  INFO  -||- [com.xxl.job.core.thread.ExecutorRegistryThread] [xxl-job, executor ExecutorRegistryThread] => >>>>>>>>>>> xxl-job registry-remove success, registryParam:RegistryParam{registryGroup='EXECUTOR', registryKey='chenfan-finance', registryValue='http://10.228.84.57:9999/'}, registryResult:ReturnT [code=200, msg=null, content=null]
05-18  14:28:03.936  INFO  -||- [com.xxl.job.core.thread.ExecutorRegistryThread] [xxl-job, executor ExecutorRegistryThread] => >>>>>>>>>>> xxl-job, executor registry thread destory.
05-18  14:28:03.936  INFO  -||- [com.xxl.job.core.server.EmbedServer] [SpringContextShutdownHook] => >>>>>>>>>>> xxl-job remoting server destroy success.
05-18  14:28:03.936  INFO  -||- [com.xxl.job.core.thread.TriggerCallbackThread] [xxl-job, executor TriggerCallbackThread] => >>>>>>>>>>> xxl-job, executor callback thread destory.
05-18  14:28:03.937  INFO  -||- [com.xxl.job.core.thread.TriggerCallbackThread] [Thread-80] => >>>>>>>>>>> xxl-job, executor retry callback thread destory.
05-18  14:28:03.937  INFO  -||- [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] [SpringContextShutdownHook] => Shutting down ExecutorService 'sheduleClearMemory'
05-18  14:28:03.959  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:9876] result: true
05-18  14:28:03.959  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10911] result: true
05-18  14:28:03.959  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10909] result: true
05-18  14:28:03.966  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:9876] result: true
05-18  14:28:03.967  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10909] result: true
05-18  14:28:03.967  INFO  -||- [RocketmqRemoting] [NettyClientSelector_1] => closeChannel: close the connection to remote address[10.228.81.30:10911] result: true
05-18  14:28:03.995  INFO  -||- [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [SpringContextShutdownHook] => Closing JPA EntityManagerFactory for persistence unit 'default'
05-18  14:28:04.000  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [SpringContextShutdownHook] => {dataSource-1} closing ...
05-18  14:28:04.008  INFO  -||- [com.alibaba.druid.pool.DruidDataSource] [SpringContextShutdownHook] => {dataSource-1} closed
